(define (domain driverlog)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	location locatable - object
	driver truck obj - locatable
)

(:predicates (at ?obj - locatable ?loc - location)
	(in ?obj1 - obj ?obj - truck)
	(driving ?d - driver ?v - truck)
	(link ?x - location ?y - location)
	(path ?x - location ?y - location)
	(empty ?v - truck)
)

(:functions (time-to-walk ?l1 - location ?l2 - location)
	(time-to-drive ?l1 - location ?l2 - location)
	(driven )
	(walked )
)

(:action load-truck
	:parameters (?a - obj ?b - truck ?c - location)
	:precondition (and (at ?a ?c)
	(at ?b ?c)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.9970) (* (walked ) -0.0775)) 343.9612)
	(<= (+ (* (walked ) -0.2873) (* (driven ) -0.9578)) -51.7226)
	(<= (walked ) 180))
	:effect (and (in ?a ?b)
		(not (at ?a ?c)) 
		))

(:action unload-truck
	:parameters (?a - obj ?b - truck ?c - location)
	:precondition (and (at ?b ?c)
	(in ?a ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) -1) (* (walked ) -0.0056)) -133.9979)
	(<= (+ (* (driven ) 0.9593) (* (walked ) -0.2825)) 382.7530)
	(<= (walked ) 180))
	:effect (and (at ?a ?c)
		(not (in ?a ?b)) 
		))

(:action board-truck
	:parameters (?a - driver ?b - truck ?c - location)
	:precondition (and (at ?a ?c)
	(at ?b ?c)
	(empty ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.8836) (* (walked ) -0.4683)) 423.2314)
	(<= (+ (* (walked ) 0.7822) (* (driven ) -0.6230)) 0)
	(<= (+ (* (walked ) 0.9601) (* (driven ) -0.2796)) 109.6197))
	:effect (and (driving ?a ?b)
		(not (at ?a ?c))
		(not (empty ?b)) 
		))

(:action disembark-truck
	:parameters (?a - driver ?b - truck ?c - location)
	:precondition (and (at ?b ?c)
	(driving ?a ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.9295) (* (walked ) -0.3687)) 519.6136)
	(<= (+ (* (walked ) -0.8148) (* (driven ) -0.5797)) -277.6830)
	(<= (+ (* (walked ) 0.9601) (* (driven ) -0.2796)) 109.6197)
	(<= (walked ) 300))
	:effect (and (at ?a ?c)
		(empty ?b)
		(not (driving ?a ?b)) 
		))

(:action drive-truck
	:parameters (?a - truck ?b - location ?c - location ?d - driver)
	:precondition (and (at ?a ?b)
	(driving ?d ?a)
	(link ?b ?c)
	(link ?c ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.0383) (+ (* (time-to-drive ?c ?b) 0.9979) (* (walked ) -0.0517))) 98.2002)
	(<= (+ (* (driven ) 0.3660) (+ (* (time-to-drive ?c ?b) -0.8772) (* (walked ) -0.3109))) 105.1250)
	(<= (+ (* (driven ) 0.4899) (+ (* (time-to-drive ?c ?b) 0.8596) (* (walked ) -0.1450))) 303.4316)
	(<= (+ (* (time-to-drive ?c ?b) 0.8843) (+ (* (walked ) -0.1916) (* (driven ) -0.4258))) 47.7527)
	(<= (+ (* (time-to-drive ?c ?b) 0.9974) (* (walked ) -0.0720)) 79.7922)
	(<= (+ (* (time-to-drive ?c ?b) 0.9982) (+ (* (driven ) 0.0290) (* (walked ) -0.0528))) 93.7219)
	(<= (+ (* (walked ) -0.0127) (+ (* (time-to-drive ?c ?b) -0.9921) (* (driven ) -0.1249))) -53.5731)
	(<= (+ (* (walked ) 0.0764) (* (time-to-drive ?c ?b) -0.9971)) -16.9503)
	(<= (+ (* (walked ) 0.1020) (+ (* (driven ) -0.0225) (* (time-to-drive ?c ?b) -0.9945))) -23.5099)
	(<= (+ (* (walked ) 0.1850) (+ (* (time-to-drive ?c ?b) -0.8538) (* (driven ) -0.4866))) -46.1063)
	(<= (+ (* (walked ) 0.9137) (+ (* (time-to-drive ?c ?b) -0.3530) (* (driven ) -0.2012))) 131.6392)
	(<= (time-to-drive ?c ?b) 93)
	(= (time-to-drive ?b ?c) (time-to-drive ?c ?b)))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (driven ) (time-to-drive ?b ?c))))

(:action walk
	:parameters (?a - driver ?b - location ?c - location)
	:precondition (and (at ?a ?b)
	(path ?b ?c)
	(path ?c ?b)
	(<= (+ (* (driven ) -0.0731) (+ (* (time-to-walk ?c ?b) -0.9964) (* (walked ) -0.0433))) -91.6671)
	(<= (+ (* (driven ) 0.0260) (+ (* (time-to-walk ?c ?b) 0.9986) (* (walked ) -0.0454))) 91.8741)
	(<= (+ (* (driven ) 0.1381) (+ (* (walked ) 0.0450) (* (time-to-walk ?c ?b) -0.9894))) 20.0578)
	(<= (+ (* (time-to-walk ?c ?b) 0.4302) (+ (* (driven ) 0.3674) (* (walked ) -0.8246))) 39.5799)
	(<= (+ (* (walked ) 0.0434) (+ (* (time-to-walk ?c ?b) 0.9987) (* (driven ) -0.0249))) 91.8848)
	(<= (+ (* (walked ) 0.3376) (+ (* (driven ) -0.1419) (* (time-to-walk ?c ?b) -0.9305))) -50.8275)
	(= (time-to-walk ?b ?c) (time-to-walk ?c ?b)))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (walked ) (time-to-walk ?b ?c))))

)
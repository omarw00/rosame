(define (domain driverlog)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	location locatable - object
	driver truck obj - locatable
)

(:predicates (at ?obj - locatable ?loc - location)
	(in ?obj1 - obj ?obj - truck)
	(driving ?d - driver ?v - truck)
	(link ?x - location ?y - location)
	(path ?x - location ?y - location)
	(empty ?v - truck)
)

(:functions (time-to-walk ?l1 - location ?l2 - location)
	(time-to-drive ?l1 - location ?l2 - location)
	(driven )
	(walked )
)

(:action load-truck
	:parameters (?a - obj ?b - truck ?c - location)
	:precondition (and (at ?a ?c)
	(at ?b ?c)
	(<= (* (driven ) -1) 0)
	(<= (driven ) 85)
	(= (walked ) 0))
	:effect (and (in ?a ?b)
		(not (at ?a ?c)) 
		))

(:action unload-truck
	:parameters (?a - obj ?b - truck ?c - location)
	:precondition (and (at ?b ?c)
	(in ?a ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.3846) (* (walked ) -0.9231)) 65.3846)
	(<= (+ (* (walked ) 0.9831) (* (driven ) -0.1829)) -9.3283))
	:effect (and (at ?a ?c)
		(not (in ?a ?b)) 
		))

(:action board-truck
	:parameters (?a - driver ?b - truck ?c - location)
	:precondition (and (at ?a ?c)
	(at ?b ?c)
	(empty ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.2880) (* (walked ) -0.9576)) 24.4807)
	(<= (+ (* (driven ) 0.8824) (* (walked ) -0.4706)) 173.5294)
	(<= (+ (* (walked ) 0.8984) (* (driven ) -0.4391)) 0))
	:effect (and (driving ?a ?b)
		(not (at ?a ?c))
		(not (empty ?b)) 
		))

(:action disembark-truck
	:parameters (?a - driver ?b - truck ?c - location)
	:precondition (and (at ?b ?c)
	(driving ?a ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.9106) (* (walked ) -0.4133)) 198.5122)
	(<= (+ (* (walked ) 0.8307) (* (driven ) -0.5567)) -46.2040))
	:effect (and (at ?a ?c)
		(empty ?b)
		(not (driving ?a ?b)) 
		))

(:action drive-truck
	:parameters (?a - truck ?b - location ?c - location ?d - driver)
	:precondition (and (at ?a ?b)
	(driving ?d ?a)
	(link ?b ?c)
	(link ?c ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.3192) (+ (* (walked ) -0.4700) (* (time-to-drive ?c ?b) -0.8229))) 14.7702)
	(<= (+ (* (driven ) 0.3600) (+ (* (time-to-drive ?c ?b) 0.8269) (* (walked ) -0.4320))) 100.8873)
	(<= (+ (* (driven ) 0.4441) (+ (* (time-to-drive ?c ?b) -0.7202) (* (walked ) -0.5330))) 40.9320)
	(<= (+ (* (time-to-drive ?c ?b) 0.8691) (* (walked ) 0.4947)) 73.8705)
	(<= (+ (* (time-to-drive ?c ?b) 0.9400) (+ (* (driven ) 0.1730) (* (walked ) 0.2941))) 94.6046)
	(<= (+ (* (walked ) 0.0614) (* (time-to-drive ?c ?b) -0.9981)) -2.9943)
	(<= (+ (* (walked ) 0.7624) (+ (* (driven ) -0.4435) (* (time-to-drive ?c ?b) -0.4712))) -24.0308)
	(<= (+ (* (walked ) 0.8984) (* (driven ) -0.4391)) 0)
	(= (time-to-drive ?b ?c) (time-to-drive ?c ?b)))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (driven ) (time-to-drive ?b ?c))))

(:action walk
	:parameters (?a - driver ?b - location ?c - location)
	:precondition (and (at ?a ?b)
	(path ?b ?c)
	(path ?c ?b)
	(<= (* (walked ) -1) 0)
	(<= (walked ) 40)
	(= (+ (* (driven ) 1) (* (walked ) -1.2000)) 218)
	(= (+ (* (walked ) 0.3123) (+ (* (driven ) 0.3748) (+ (* (time-to-walk ?c ?b) 0.3904) (* (time-to-walk ?b ?c) -1)))) 57.3142)
	(= (+ (* (walked ) 0.5123) (+ (* (driven ) 0.6148) (* (time-to-walk ?c ?b) -1))) 94.0164))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (walked ) (+ (* (time-to-walk ?b ?c) 0.7027) (+ (* (driven ) 0.6746) (+ (* (walked ) -0.4379) -135.1655))))))

)
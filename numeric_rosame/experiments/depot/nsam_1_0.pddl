(define (domain depot)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	place locatable - object
	depot distributor - place
	truck hoist surface - locatable
	pallet crate - surface
)

(:predicates (at ?x - locatable ?y - place)
	(on ?x - crate ?y - surface)
	(in ?x - crate ?y - truck)
	(lifting ?x - hoist ?y - crate)
	(available ?x - hoist)
	(clear ?x - surface)
)

(:functions (load_limit ?t - truck)
	(current_load ?t - truck)
	(weight ?c - crate)
	(fuel-cost )
)

(:action drive
	:parameters (?x - truck ?y - place ?z - place)
	:precondition (and (at ?x ?y)
	(not (at ?x ?z))
	(<= (+ (* (current_load ?x) -0.9580) (* (load_limit ?x) -0.2867)) -101.4940)
	(<= (+ (* (current_load ?x) 0.9191) (+ (* (load_limit ?x) -0.0789) (* (fuel-cost ) -0.3860))) 18.6329)
	(<= (+ (* (current_load ?x) 0.9625) (+ (* (load_limit ?x) -0.1972) (* (fuel-cost ) -0.1863))) -4.2546)
	(<= (+ (* (fuel-cost ) 0.1784) (+ (* (load_limit ?x) -0.3437) (* (current_load ?x) -0.9220))) -111.4823)
	(<= (+ (* (fuel-cost ) 0.9720) (+ (* (load_limit ?x) -0.0197) (* (current_load ?x) -0.2342))) 48.4435)
	(<= (+ (* (load_limit ?x) 0.1302) (+ (* (current_load ?x) 0.1732) (* (fuel-cost ) -0.9762))) 30.4777)
	(<= (load_limit ?x) 354))
	:effect (and (at ?x ?z)
		(not (at ?x ?y))
(increase (fuel-cost ) 10)))

(:action lift
	:parameters (?x - hoist ?y - crate ?z - surface ?p - place)
	:precondition (and (at ?x ?p)
	(at ?y ?p)
	(at ?z ?p)
	(available ?x)
	(clear ?y)
	(not (clear ?z))
	(not (lifting ?x ?y))
	(on ?y ?z)
	(<= (+ (* (fuel-cost ) 0.6743) (* (weight ?y) 0.7385)) 38.9471)
	(<= (+ (* (fuel-cost ) 0.8396) (* (weight ?y) -0.5433)) 6.0745)
	(<= (+ (* (weight ?y) -0.6616) (* (fuel-cost ) -0.7498)) -19.1870)
	(<= (+ (* (weight ?y) 0.1047) (* (fuel-cost ) -0.9945)) 3.0359)
	(<= (+ (* (weight ?y) 0.4472) (* (fuel-cost ) -0.8944)) 19.6774))
	:effect (and (clear ?z)
		(lifting ?x ?y)
		(not (at ?y ?p))
		(not (available ?x))
		(not (clear ?y))
		(not (on ?y ?z))
(increase (fuel-cost ) 1)))

(:action drop
	:parameters (?x - hoist ?y - crate ?z - surface ?p - place)
	:precondition (and (at ?x ?p)
	(at ?z ?p)
	(clear ?z)
	(lifting ?x ?y)
	(not (at ?y ?p))
	(not (available ?x))
	(not (clear ?y))
	(not (on ?y ?z))
	(<= (+ (* (fuel-cost ) 0.9029) (* (weight ?y) -0.4299)) 64.3611)
	(<= (+ (* (weight ?y) -0.8969) (* (fuel-cost ) -0.4423)) -44.8190)
	(<= (+ (* (weight ?y) 0.9997) (* (fuel-cost ) -0.0241)) 47.8897)
	(<= (fuel-cost ) 87))
	:effect (and (at ?y ?p)
		(available ?x)
		(clear ?y)
		(not (clear ?z))
		(not (lifting ?x ?y))
		(on ?y ?z) 
		))

(:action load
	:parameters (?x - hoist ?y - crate ?z - truck ?p - place)
	:precondition (and (at ?x ?p)
	(at ?z ?p)
	(lifting ?x ?y)
	(not (at ?y ?p))
	(not (available ?x))
	(not (clear ?y))
	(not (in ?y ?z))
	(<= (* (current_load ?z) -1) 0)
	(<= (+ (* (current_load ?z) 0.1585) (+ (* (load_limit ?z) -0.0524) (+ (* (weight ?y) -0.8931) (* (fuel-cost ) -0.4177)))) -50.0688)
	(<= (+ (* (current_load ?z) 0.3217) (+ (* (weight ?y) 0.9462) (+ (* (fuel-cost ) 0.0019) (* (load_limit ?z) -0.0341)))) 35.3785)
	(<= (+ (* (current_load ?z) 0.8435) (+ (* (fuel-cost ) -0.1633) (+ (* (weight ?y) -0.3490) (* (load_limit ?z) -0.3742)))) -96.3227)
	(<= (+ (* (fuel-cost ) 0.1749) (+ (* (weight ?y) 0.3738) (+ (* (current_load ?z) -0.9034) (* (load_limit ?z) -0.1164)))) -9.0688)
	(<= (+ (* (fuel-cost ) 0.2891) (+ (* (current_load ?z) 0.8469) (+ (* (load_limit ?z) -0.2765) (* (weight ?y) -0.3504)))) -44.8278)
	(<= (+ (* (fuel-cost ) 0.9973) (* (load_limit ?z) -0.0728)) 51.0248)
	(<= (+ (* (load_limit ?z) 0.0120) (+ (* (current_load ?z) -0.1091) (+ (* (fuel-cost ) -0.4211) (* (weight ?y) -0.9003)))) -36.4202)
	(<= (+ (* (load_limit ?z) 0.1565) (+ (* (fuel-cost ) 0.0883) (+ (* (current_load ?z) -0.0335) (* (weight ?y) -0.9832)))) 28.0724)
	(<= (+ (* (load_limit ?z) 0.1830) (+ (* (fuel-cost ) 0.1152) (+ (* (current_load ?z) -0.1175) (* (weight ?y) -0.9692)))) 35.8058)
	(<= (+ (* (load_limit ?z) 0.2227) (+ (* (fuel-cost ) 0.2934) (+ (* (current_load ?z) -0.2993) (* (weight ?y) -0.8802)))) 57.4270)
	(<= (+ (* (weight ?y) 0.9375) (+ (* (load_limit ?z) 0.1026) (+ (* (current_load ?z) 0.1136) (* (fuel-cost ) -0.3125)))) 59.1488)
	(<= (+ (* (weight ?y) 0.9379) (+ (* (load_limit ?z) 0.1014) (+ (* (current_load ?z) 0.1176) (* (fuel-cost ) -0.3101)))) 58.8992)
	(<= (+ (* (weight ?y) 0.9555) (+ (* (current_load ?z) 0.2877) (+ (* (load_limit ?z) -0.0335) (* (fuel-cost ) -0.0557)))) 31.6269)
	(<= (load_limit ?z) 354))
	:effect (and (available ?x)
		(in ?y ?z)
		(not (lifting ?x ?y))
(increase (current_load ?z) (weight ?y))))

(:action unload
	:parameters (?x - hoist ?y - crate ?z - truck ?p - place)
	:precondition (and (at ?x ?p)
	(at ?z ?p)
	(available ?x)
	(in ?y ?z)
	(not (at ?y ?p))
	(not (clear ?y))
	(not (lifting ?x ?y))
	(<= (+ (* (current_load ?z) 0.8830) (+ (* (weight ?y) 0.3654) (* (load_limit ?z) -0.2947))) -12.7669)
	(<= (+ (* (fuel-cost ) 0.1253) (+ (* (load_limit ?z) 0.1470) (+ (* (current_load ?z) 0.0404) (* (weight ?y) -0.9803)))) 31.9324)
	(<= (+ (* (fuel-cost ) 0.1709) (+ (* (weight ?y) -0.3752) (+ (* (current_load ?z) -0.9068) (* (load_limit ?z) -0.0873)))) -58.3558)
	(<= (+ (* (fuel-cost ) 0.9973) (* (load_limit ?z) -0.0728)) 60.9983)
	(<= (+ (* (load_limit ?z) 0.0304) (+ (* (current_load ?z) -0.1305) (+ (* (fuel-cost ) -0.4044) (* (weight ?y) -0.9047)))) -42.3236)
	(<= (+ (* (load_limit ?z) 0.0365) (+ (* (weight ?y) 0.9461) (* (current_load ?z) -0.3217))) 33.5154)
	(<= (+ (* (load_limit ?z) 0.0791) (+ (* (weight ?y) 0.9405) (+ (* (current_load ?z) -0.3198) (* (fuel-cost ) -0.0828)))) 41.3009)
	(<= (+ (* (load_limit ?z) 0.1412) (+ (* (weight ?y) 0.9123) (+ (* (fuel-cost ) -0.3842) (* (current_load ?z) -0.0067)))) 61.6345)
	(<= (+ (* (load_limit ?z) 0.1438) (+ (* (current_load ?z) 0.2906) (+ (* (fuel-cost ) 0.4055) (* (weight ?y) -0.8547)))) 67.5777)
	(<= (+ (* (load_limit ?z) 0.1498) (+ (* (weight ?y) 0.9245) (+ (* (fuel-cost ) -0.2882) (* (current_load ?z) -0.1994)))) 57.6184)
	(<= (+ (* (load_limit ?z) 0.2591) (+ (* (weight ?y) 0.1465) (+ (* (current_load ?z) -0.2931) (* (fuel-cost ) -0.9086)))) 35.6733)
	(<= (+ (* (weight ?y) -0.3799) (+ (* (load_limit ?z) -0.1137) (* (current_load ?z) -0.9180))) -77.8834)
	(<= (+ (* (weight ?y) 0.3539) (+ (* (current_load ?z) 0.8884) (+ (* (load_limit ?z) -0.2922) (* (fuel-cost ) -0.0065)))) -12.5839)
	(<= (+ (* (weight ?y) 0.7071) (* (current_load ?z) -0.7071)) 0)
	(<= (load_limit ?z) 354))
	:effect (and (lifting ?x ?y)
		(not (available ?x))
		(not (in ?y ?z))
(decrease (current_load ?z) (weight ?y))))

)
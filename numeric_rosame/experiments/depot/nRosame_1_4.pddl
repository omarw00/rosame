(define (domain depot)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	place locatable - object
	depot distributor - place
	truck hoist surface - locatable
	pallet crate - surface
)

(:predicates (at ?x - locatable ?y - place)
	(on ?x - crate ?y - surface)
	(in ?x - crate ?y - truck)
	(lifting ?x - hoist ?y - crate)
	(available ?x - hoist)
	(clear ?x - surface)
)

(:functions (load_limit ?t - truck)
	(current_load ?t - truck)
	(weight ?c - crate)
	(fuel-cost )
)

(:action drive
	:parameters (?a - truck ?b - place ?c - place)
	:precondition (and (at ?a ?b)
	(<= (* (current_load ?a) -1) 0)
	(<= (* (load_limit ?a) -1) -266)
	(<= (+ (* (current_load ?a) -0.5641) (+ (* (fuel-cost ) -0.7897) (* (load_limit ?a) -0.2413))) -128.1490)
	(<= (+ (* (current_load ?a) 0.1217) (+ (* (load_limit ?a) -0.6976) (* (fuel-cost ) -0.7061))) -233.9783)
	(<= (+ (* (current_load ?a) 0.1648) (+ (* (fuel-cost ) -0.6178) (* (load_limit ?a) -0.7689))) -246.0753)
	(<= (+ (* (current_load ?a) 0.5431) (+ (* (fuel-cost ) 0.5934) (* (load_limit ?a) -0.5940))) -45.9639)
	(<= (+ (* (fuel-cost ) -0.9600) (+ (* (current_load ?a) -0.1650) (* (load_limit ?a) -0.2261))) -130.6187)
	(<= (+ (* (fuel-cost ) 0.0932) (+ (* (current_load ?a) 0.4662) (* (load_limit ?a) -0.8797))) -184.0358)
	(<= (+ (* (load_limit ?a) -0.2259) (+ (* (fuel-cost ) -0.9600) (* (current_load ?a) -0.1655))) -130.5650)
	(<= (+ (* (load_limit ?a) 0.0032) (+ (* (fuel-cost ) 0.9931) (* (current_load ?a) -0.1168))) 101.1710)
	(<= (+ (* (load_limit ?a) 0.4152) (+ (* (fuel-cost ) 0.8462) (* (current_load ?a) -0.3340))) 195.9195)
	(<= (load_limit ?a) 374))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (fuel-cost ) 10)))

(:action lift
	:parameters (?a - hoist ?b - crate ?c - surface ?d - place)
	:precondition (and (at ?a ?d)
	(at ?b ?d)
	(at ?c ?d)
	(available ?a)
	(clear ?b)
	(on ?b ?c)
	(<= (+ (* (fuel-cost ) -0.5322) (* (weight ?b) -0.8466)) -49.1049)
	(<= (+ (* (fuel-cost ) 0.0447) (* (weight ?b) 0.9990)) 91.9974)
	(<= (+ (* (fuel-cost ) 0.3807) (* (weight ?b) -0.9247)) 13.7070)
	(<= (+ (* (fuel-cost ) 0.4404) (* (weight ?b) 0.8978)) 110.2926)
	(<= (+ (* (fuel-cost ) 0.9994) (* (weight ?b) -0.0357)) 119.6737)
	(<= (+ (* (weight ?b) 0.0587) (* (fuel-cost ) -0.9983)) 3.4059))
	:effect (and (clear ?c)
		(lifting ?a ?b)
		(not (at ?b ?d))
		(not (available ?a))
		(not (clear ?b))
		(not (on ?b ?c))
(increase (fuel-cost ) 1)))

(:action drop
	:parameters (?a - hoist ?b - crate ?c - surface ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(clear ?c)
	(lifting ?a ?b)
	(<= (+ (* (fuel-cost ) -0.4388) (* (weight ?b) -0.8986)) -52.5140)
	(<= (+ (* (fuel-cost ) 0.4472) (* (weight ?b) -0.8944)) 28.1745)
	(<= (+ (* (weight ?b) -0.5178) (* (fuel-cost ) -0.8555)) -59.1871)
	(<= (+ (* (weight ?b) 0.5547) (* (fuel-cost ) -0.8321)) 19.6919)
	(<= (+ (* (weight ?b) 0.9888) (* (fuel-cost ) -0.1493)) 71.1189)
	(<= (fuel-cost ) 133))
	:effect (and (at ?b ?d)
		(available ?a)
		(clear ?b)
		(not (clear ?c))
		(not (lifting ?a ?b))
		(on ?b ?c) 
		))

(:action load
	:parameters (?a - hoist ?b - crate ?c - truck ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(lifting ?a ?b)
	(<= (* (current_load ?c) -1) 0)
	(<= (+ (* (current_load ?c) 0.0169) (+ (* (load_limit ?c) -0.5303) (+ (* (weight ?b) -0.0203) (* (fuel-cost ) -0.8474)))) -201.5133)
	(<= (+ (* (current_load ?c) 0.0314) (+ (* (weight ?b) 0.1990) (+ (* (load_limit ?c) -0.6346) (* (fuel-cost ) -0.7461)))) -219.0037)
	(<= (+ (* (current_load ?c) 0.0320) (+ (* (load_limit ?c) -0.4356) (+ (* (fuel-cost ) -0.8717) (* (weight ?b) -0.2221)))) -180.8703)
	(<= (+ (* (current_load ?c) 0.0747) (+ (* (fuel-cost ) 0.0462) (+ (* (weight ?b) 0.9953) (* (load_limit ?c) -0.0405)))) 82.0193)
	(<= (+ (* (current_load ?c) 0.1331) (+ (* (weight ?b) 0.1754) (+ (* (fuel-cost ) -0.6576) (* (load_limit ?c) -0.7205)))) -235.8806)
	(<= (+ (* (current_load ?c) 0.2541) (+ (* (fuel-cost ) 0.3063) (+ (* (weight ?b) 0.9132) (* (load_limit ?c) -0.0875)))) 88.3320)
	(<= (+ (* (current_load ?c) 0.2696) (+ (* (fuel-cost ) 0.1833) (+ (* (weight ?b) 0.9165) (* (load_limit ?c) -0.2319)))) 36.5576)
	(<= (+ (* (current_load ?c) 0.2724) (+ (* (weight ?b) 0.8888) (+ (* (fuel-cost ) 0.3573) (* (load_limit ?c) -0.0907)))) 91.0852)
	(<= (+ (* (current_load ?c) 0.3491) (+ (* (weight ?b) 0.7855) (+ (* (fuel-cost ) 0.4744) (* (load_limit ?c) -0.1901)))) 68.8571)
	(<= (+ (* (current_load ?c) 0.3966) (* (load_limit ?c) -0.9180)) -244.1884)
	(<= (+ (* (current_load ?c) 0.4566) (+ (* (fuel-cost ) 0.3586) (+ (* (load_limit ?c) -0.7887) (* (weight ?b) -0.2020)))) -187.1640)
	(<= (+ (* (fuel-cost ) 0.8547) (+ (* (load_limit ?c) -0.0479) (+ (* (current_load ?c) -0.1881) (* (weight ?b) -0.4815)))) 41.1921)
	(<= (+ (* (fuel-cost ) 0.9803) (+ (* (load_limit ?c) -0.0801) (+ (* (current_load ?c) -0.0733) (* (weight ?b) -0.1649)))) 73.4958)
	(<= (+ (* (load_limit ?c) 0.0159) (+ (* (weight ?b) 0.9568) (+ (* (current_load ?c) -0.2469) (* (fuel-cost ) -0.1528)))) 75.4702)
	(<= (+ (* (load_limit ?c) 0.3484) (+ (* (weight ?b) -0.9075) (+ (* (current_load ?c) -0.0425) (* (fuel-cost ) -0.2306)))) 63.6055)
	(<= (+ (* (load_limit ?c) 0.3897) (+ (* (weight ?b) -0.9017) (+ (* (fuel-cost ) -0.1610) (* (current_load ?c) -0.0954)))) 79.6115)
	(<= (+ (* (load_limit ?c) 0.4011) (+ (* (fuel-cost ) 0.3627) (+ (* (current_load ?c) -0.2944) (* (weight ?b) -0.7879)))) 121.4255)
	(<= (+ (* (weight ?b) 0.2051) (+ (* (load_limit ?c) -0.6036) (+ (* (current_load ?c) -0.0429) (* (fuel-cost ) -0.7693)))) -212.2932)
	(<= (+ (* (weight ?b) 0.9621) (+ (* (current_load ?c) 0.1761) (+ (* (fuel-cost ) 0.1924) (* (load_limit ?c) -0.0802)))) 81.8065)
	(<= (load_limit ?c) 374))
	:effect (and (available ?a)
		(in ?b ?c)
		(not (lifting ?a ?b))
(increase (current_load ?c) (weight ?b))))

(:action unload
	:parameters (?a - hoist ?b - crate ?c - truck ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(available ?a)
	(in ?b ?c)
	(<= (+ (* (current_load ?c) 0.0456) (+ (* (load_limit ?c) 0.2685) (+ (* (fuel-cost ) -0.2857) (* (weight ?b) -0.9188)))) 36.0435)
	(<= (+ (* (current_load ?c) 0.1987) (+ (* (load_limit ?c) 0.0633) (+ (* (fuel-cost ) -0.1748) (* (weight ?b) -0.9623)))) -7.9992)
	(<= (+ (* (current_load ?c) 0.2449) (+ (* (fuel-cost ) 0.4898) (+ (* (weight ?b) 0.8275) (* (load_limit ?c) -0.1239)))) 117.4520)
	(<= (+ (* (current_load ?c) 0.2692) (+ (* (fuel-cost ) 0.5973) (+ (* (load_limit ?c) -0.4515) (* (weight ?b) -0.6057)))) -76.4250)
	(<= (+ (* (current_load ?c) 0.4082) (+ (* (load_limit ?c) -0.8165) (* (weight ?b) -0.4082))) -217.1881)
	(<= (+ (* (current_load ?c) 0.4356) (+ (* (fuel-cost ) 0.3118) (+ (* (load_limit ?c) -0.5826) (* (weight ?b) -0.6112)))) -132.1847)
	(<= (+ (* (fuel-cost ) 0.1844) (+ (* (current_load ?c) 0.3776) (+ (* (load_limit ?c) -0.3187) (* (weight ?b) -0.8496)))) -76.4393)
	(<= (+ (* (fuel-cost ) 0.2147) (+ (* (current_load ?c) 0.1074) (+ (* (weight ?b) 0.9662) (* (load_limit ?c) -0.0934)))) 92.3821)
	(<= (+ (* (fuel-cost ) 0.2800) (+ (* (load_limit ?c) 0.5418) (+ (* (current_load ?c) -0.5387) (* (weight ?b) -0.5813)))) 151.1242)
	(<= (+ (* (fuel-cost ) 0.4495) (+ (* (load_limit ?c) 0.5112) (+ (* (weight ?b) -0.3833) (* (current_load ?c) -0.6242)))) 158.2920)
	(<= (+ (* (fuel-cost ) 0.9232) (+ (* (load_limit ?c) -0.0689) (+ (* (current_load ?c) -0.3222) (* (weight ?b) -0.1979)))) 49.1782)
	(<= (+ (* (fuel-cost ) 0.9939) (* (load_limit ?c) -0.1104)) 90.8851)
	(<= (+ (* (load_limit ?c) 0.0539) (+ (* (weight ?b) 0.9151) (+ (* (current_load ?c) -0.3214) (* (fuel-cost ) -0.2375)))) 43.1830)
	(<= (+ (* (weight ?b) 0.0691) (+ (* (load_limit ?c) -0.2599) (+ (* (current_load ?c) -0.1452) (* (fuel-cost ) -0.9521)))) -147.3327)
	(<= (+ (* (weight ?b) 0.2795) (+ (* (load_limit ?c) -0.4760) (+ (* (current_load ?c) -0.0577) (* (fuel-cost ) -0.8318)))) -190.8982)
	(<= (+ (* (weight ?b) 0.3100) (+ (* (current_load ?c) -0.0867) (+ (* (load_limit ?c) -0.4415) (* (fuel-cost ) -0.8375)))) -182.1452)
	(<= (+ (* (weight ?b) 0.3636) (+ (* (current_load ?c) -0.0751) (+ (* (fuel-cost ) -0.8203) (* (load_limit ?c) -0.4351)))) -172.9115)
	(<= (+ (* (weight ?b) 0.4579) (+ (* (load_limit ?c) -0.3267) (+ (* (current_load ?c) -0.2475) (* (fuel-cost ) -0.7889)))) -147.8656)
	(<= (+ (* (weight ?b) 0.7071) (* (current_load ?c) -0.7071)) 0)
	(<= (+ (* (weight ?b) 0.9939) (+ (* (load_limit ?c) 0.0030) (+ (* (current_load ?c) -0.0493) (* (fuel-cost ) -0.0987)))) 74.8963)
	(<= (load_limit ?c) 374))
	:effect (and (lifting ?a ?b)
		(not (available ?a))
		(not (in ?b ?c))
(decrease (current_load ?c) (weight ?b))))

)
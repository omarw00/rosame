(define (domain depot)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	place locatable - object
	depot distributor - place
	truck hoist surface - locatable
	pallet crate - surface
)

(:predicates (at ?x - locatable ?y - place)
	(on ?x - crate ?y - surface)
	(in ?x - crate ?y - truck)
	(lifting ?x - hoist ?y - crate)
	(available ?x - hoist)
	(clear ?x - surface)
)

(:functions (load_limit ?t - truck)
	(current_load ?t - truck)
	(weight ?c - crate)
	(fuel-cost )
)

(:action drive
	:parameters (?x - truck ?y - place ?z - place)
	:precondition (and (at ?x ?y)
	(not (at ?x ?z))
	(<= (+ (* (current_load ?x) 0.2847) (+ (* (fuel-cost ) 0.7876) (* (load_limit ?x) -0.5465))) -126.5855)
	(<= (+ (* (fuel-cost ) 0.3958) (+ (* (load_limit ?x) -0.6169) (* (current_load ?x) -0.6803))) -215.9753)
	(<= (+ (* (load_limit ?x) 0.2904) (+ (* (current_load ?x) 0.2033) (* (fuel-cost ) -0.9351))) 91.7527)
	(<= (load_limit ?x) 349))
	:effect (and (at ?x ?z)
		(not (at ?x ?y))
(increase (fuel-cost ) 10)))

(:action lift
	:parameters (?x - hoist ?y - crate ?z - surface ?p - place)
	:precondition (and (at ?x ?p)
	(at ?y ?p)
	(at ?z ?p)
	(available ?x)
	(clear ?y)
	(not (clear ?z))
	(not (lifting ?x ?y))
	(on ?y ?z)
	(<= (+ (* (fuel-cost ) 0.6536) (* (weight ?y) -0.7568)) -5.4010)
	(<= (+ (* (fuel-cost ) 0.7348) (* (weight ?y) -0.6783)) -1.4131)
	(<= (+ (* (fuel-cost ) 0.7948) (* (weight ?y) -0.6069)) 3.5403)
	(<= (+ (* (weight ?y) -0.0156) (* (fuel-cost ) -0.9999)) -1.1249)
	(<= (+ (* (weight ?y) 0.9582) (* (fuel-cost ) -0.2862)) 68.9881))
	:effect (and (clear ?z)
		(lifting ?x ?y)
		(not (at ?y ?p))
		(not (available ?x))
		(not (clear ?y))
		(not (on ?y ?z))
(increase (fuel-cost ) 1)))

(:action drop
	:parameters (?x - hoist ?y - crate ?z - surface ?p - place)
	:precondition (and (at ?x ?p)
	(at ?z ?p)
	(clear ?z)
	(lifting ?x ?y)
	(not (at ?y ?p))
	(not (available ?x))
	(not (clear ?y))
	(not (on ?y ?z))
	(<= (+ (* (fuel-cost ) -0.7761) (* (weight ?y) -0.6306)) -64.8055)
	(<= (+ (* (fuel-cost ) 0.9986) (* (weight ?y) -0.0526)) 76.4731)
	(<= (+ (* (weight ?y) 0.9173) (* (fuel-cost ) -0.3981)) 56.0965)
	(<= (fuel-cost ) 78))
	:effect (and (at ?y ?p)
		(available ?x)
		(clear ?y)
		(not (clear ?z))
		(not (lifting ?x ?y))
		(on ?y ?z) 
		))

(:action load
	:parameters (?x - hoist ?y - crate ?z - truck ?p - place)
	:precondition (and (at ?x ?p)
	(at ?z ?p)
	(lifting ?x ?y)
	(not (at ?y ?p))
	(not (available ?x))
	(not (clear ?y))
	(not (in ?y ?z))
	(<= (+ (* (current_load ?z) 0.0786) (+ (* (load_limit ?z) 0.0862) (+ (* (weight ?y) 0.8986) (* (fuel-cost ) -0.4230)))) 87.7218)
	(<= (+ (* (current_load ?z) 0.2576) (+ (* (weight ?y) -0.5932) (+ (* (fuel-cost ) -0.6492) (* (load_limit ?z) -0.4003)))) -152.2558)
	(<= (+ (* (current_load ?z) 0.2885) (+ (* (load_limit ?z) 0.1378) (+ (* (weight ?y) 0.2421) (* (fuel-cost ) -0.9161)))) 53.9977)
	(<= (+ (* (current_load ?z) 0.7771) (+ (* (fuel-cost ) 0.4985) (+ (* (load_limit ?z) -0.2188) (* (weight ?y) -0.3159)))) -15.4304)
	(<= (+ (* (fuel-cost ) 0.1217) (+ (* (current_load ?z) 0.1897) (+ (* (load_limit ?z) -0.5329) (* (weight ?y) -0.8156)))) -191.0636)
	(<= (+ (* (fuel-cost ) 0.2287) (+ (* (current_load ?z) 0.9671) (+ (* (weight ?y) -0.0821) (* (load_limit ?z) -0.0755)))) 48.5016)
	(<= (+ (* (fuel-cost ) 0.2298) (+ (* (load_limit ?z) -0.6411) (+ (* (weight ?y) -0.7318) (* (current_load ?z) -0.0258)))) -226.8358)
	(<= (+ (* (fuel-cost ) 0.5190) (+ (* (weight ?y) 0.0192) (+ (* (current_load ?z) -0.8525) (* (load_limit ?z) -0.0582)))) -13.9405)
	(<= (+ (* (fuel-cost ) 0.7722) (+ (* (weight ?y) 0.0934) (+ (* (current_load ?z) -0.2639) (* (load_limit ?z) -0.5705)))) -147.6658)
	(<= (+ (* (load_limit ?z) 0.2651) (+ (* (weight ?y) 0.2455) (+ (* (current_load ?z) 0.1590) (* (fuel-cost ) -0.9188)))) 88.8713)
	(<= (+ (* (load_limit ?z) 0.2704) (+ (* (weight ?y) 0.1634) (+ (* (current_load ?z) 0.1108) (* (fuel-cost ) -0.9423)))) 84.3829)
	(<= (+ (* (weight ?y) 0.2775) (+ (* (fuel-cost ) 0.6283) (+ (* (load_limit ?z) -0.0829) (* (current_load ?z) -0.7221)))) -1.9346)
	(<= (+ (* (weight ?y) 0.8790) (+ (* (load_limit ?z) 0.1954) (+ (* (current_load ?z) -0.0274) (* (fuel-cost ) -0.4341)))) 115.9936)
	(<= (load_limit ?z) 349))
	:effect (and (available ?x)
		(in ?y ?z)
		(not (lifting ?x ?y))
(increase (current_load ?z) (weight ?y))))

(:action unload
	:parameters (?x - hoist ?y - crate ?z - truck ?p - place)
	:precondition (and (at ?x ?p)
	(at ?z ?p)
	(available ?x)
	(in ?y ?z)
	(not (at ?y ?p))
	(not (clear ?y))
	(not (lifting ?x ?y))
	(<= (+ (* (current_load ?z) 0.0347) (+ (* (fuel-cost ) 0.6881) (+ (* (load_limit ?z) -0.6291) (* (weight ?y) -0.3600)))) -174.6648)
	(<= (+ (* (current_load ?z) 0.5004) (+ (* (load_limit ?z) 0.3448) (+ (* (weight ?y) 0.4217) (* (fuel-cost ) -0.6729)))) 181.8923)
	(<= (+ (* (current_load ?z) 0.7240) (+ (* (load_limit ?z) 0.3300) (+ (* (weight ?y) 0.4833) (* (fuel-cost ) -0.3652)))) 223.2983)
	(<= (+ (* (fuel-cost ) 0.1963) (+ (* (current_load ?z) 0.2090) (+ (* (load_limit ?z) -0.5080) (* (weight ?y) -0.8122)))) -160.5957)
	(<= (+ (* (fuel-cost ) 0.8237) (* (load_limit ?z) -0.5670)) -133.6261)
	(<= (+ (* (load_limit ?z) -0.1390) (+ (* (current_load ?z) -0.1643) (+ (* (weight ?y) -0.4698) (* (fuel-cost ) -0.8561)))) -117.5225)
	(<= (+ (* (load_limit ?z) -0.3258) (+ (* (weight ?y) -0.1061) (+ (* (current_load ?z) -0.5094) (* (fuel-cost ) -0.7893)))) -191.9036)
	(<= (+ (* (weight ?y) 0.5265) (+ (* (load_limit ?z) 0.3143) (+ (* (current_load ?z) 0.7239) (* (fuel-cost ) -0.3163)))) 223.3437)
	(<= (+ (* (weight ?y) 0.7631) (+ (* (current_load ?z) -0.5462) (+ (* (load_limit ?z) -0.2810) (* (fuel-cost ) -0.2011)))) -107.9079)
	(<= (+ (* (weight ?y) 0.8144) (+ (* (load_limit ?z) 0.1796) (+ (* (current_load ?z) 0.1863) (* (fuel-cost ) -0.5194)))) 122.2454)
	(<= (load_limit ?z) 349))
	:effect (and (lifting ?x ?y)
		(not (available ?x))
		(not (in ?y ?z))
(decrease (current_load ?z) (weight ?y))))

)
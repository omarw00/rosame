(define (domain depot)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	place locatable - object
	depot distributor - place
	truck hoist surface - locatable
	pallet crate - surface
)

(:predicates (at ?x - locatable ?y - place)
	(on ?x - crate ?y - surface)
	(in ?x - crate ?y - truck)
	(lifting ?x - hoist ?y - crate)
	(available ?x - hoist)
	(clear ?x - surface)
)

(:functions (load_limit ?t - truck)
	(current_load ?t - truck)
	(weight ?c - crate)
	(fuel-cost )
)

(:action drive
	:parameters (?a - truck ?b - place ?c - place)
	:precondition (and (at ?a ?b)
	(<= (* (current_load ?a) -1) 0)
	(<= (+ (* (current_load ?a) 0.0482) (+ (* (load_limit ?a) 0.0623) (* (fuel-cost ) -0.9969))) 25.1715)
	(<= (+ (* (current_load ?a) 0.0506) (+ (* (fuel-cost ) -0.9803) (* (load_limit ?a) -0.1909))) -68.2137)
	(<= (+ (* (current_load ?a) 0.1479) (+ (* (load_limit ?a) 0.2065) (* (fuel-cost ) -0.9672))) 89.1698)
	(<= (+ (* (current_load ?a) 0.2156) (+ (* (fuel-cost ) 0.9701) (* (load_limit ?a) -0.1113))) 31.3268)
	(<= (+ (* (current_load ?a) 0.7830) (+ (* (fuel-cost ) -0.6188) (* (load_limit ?a) -0.0639))) 57.4859)
	(<= (+ (* (current_load ?a) 0.8990) (+ (* (fuel-cost ) 0.4281) (* (load_limit ?a) -0.0921))) 98.2454)
	(<= (+ (* (fuel-cost ) -0.9838) (+ (* (load_limit ?a) -0.1768) (* (current_load ?a) -0.0289))) -71.4435)
	(<= (+ (* (fuel-cost ) 0.6073) (+ (* (load_limit ?a) 0.3796) (* (current_load ?a) -0.6980))) 160.0197)
	(<= (+ (* (fuel-cost ) 0.7782) (+ (* (current_load ?a) -0.5641) (* (load_limit ?a) -0.2759))) -102.8964)
	(<= (+ (* (fuel-cost ) 0.8780) (+ (* (load_limit ?a) -0.1846) (* (current_load ?a) -0.4416))) -64.9271)
	(<= (+ (* (load_limit ?a) -0.5180) (* (current_load ?a) -0.8554)) -209.2860)
	(<= (+ (* (load_limit ?a) 0.1365) (+ (* (current_load ?a) 0.4614) (* (fuel-cost ) -0.8766))) 96.7869)
	(<= (+ (* (load_limit ?a) 0.1734) (+ (* (current_load ?a) 0.1003) (* (fuel-cost ) -0.9797))) 71.8292)
	(<= (+ (* (load_limit ?a) 0.3729) (+ (* (fuel-cost ) 0.6235) (* (current_load ?a) -0.6872))) 157.4965)
	(<= (load_limit ?a) 467))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (fuel-cost ) 10)))

(:action lift
	:parameters (?a - hoist ?b - crate ?c - surface ?d - place)
	:precondition (and (at ?a ?d)
	(at ?b ?d)
	(at ?c ?d)
	(available ?a)
	(clear ?b)
	(on ?b ?c)
	(<= (* (fuel-cost ) -1) 0)
	(<= (+ (* (fuel-cost ) 0.3417) (* (weight ?b) -0.9398)) 7.2620)
	(<= (+ (* (weight ?b) -0.1644) (* (fuel-cost ) -0.9864)) -5.9184)
	(<= (+ (* (weight ?b) -0.6214) (* (fuel-cost ) -0.7835)) -19.4253)
	(<= (+ (* (weight ?b) 0.0948) (* (fuel-cost ) -0.9955)) 5.2145)
	(<= (+ (* (weight ?b) 0.2897) (* (fuel-cost ) 0.9571)) 46.6349)
	(<= (+ (* (weight ?b) 0.3881) (* (fuel-cost ) -0.9216)) 27.6491)
	(<= (+ (* (weight ?b) 0.7926) (* (fuel-cost ) 0.6097)) 81.3964))
	:effect (and (clear ?c)
		(lifting ?a ?b)
		(not (at ?b ?d))
		(not (available ?a))
		(not (clear ?b))
		(not (on ?b ?c))
(increase (fuel-cost ) 1)))

(:action drop
	:parameters (?a - hoist ?b - crate ?c - surface ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(clear ?c)
	(lifting ?a ?b)
	(<= (+ (* (fuel-cost ) -0.2822) (* (weight ?b) -0.9594)) -27.5394)
	(<= (+ (* (fuel-cost ) 0.9377) (* (weight ?b) -0.3473)) 59.7033)
	(<= (+ (* (weight ?b) -0.1390) (* (fuel-cost ) -0.9903)) -35.3205)
	(<= (+ (* (weight ?b) 0.6668) (* (fuel-cost ) -0.7452)) 32.0454)
	(<= (+ (* (weight ?b) 0.9615) (* (fuel-cost ) 0.2747)) 102.8831)
	(<= (fuel-cost ) 77))
	:effect (and (at ?b ?d)
		(available ?a)
		(clear ?b)
		(not (clear ?c))
		(not (lifting ?a ?b))
		(on ?b ?c) 
		))

(:action load
	:parameters (?a - hoist ?b - crate ?c - truck ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(lifting ?a ?b)
	(<= (* (current_load ?c) -1) 0)
	(<= (+ (* (current_load ?c) 0.0204) (+ (* (weight ?b) 0.0080) (+ (* (load_limit ?c) -0.1794) (* (fuel-cost ) -0.9835)))) -68.0959)
	(<= (+ (* (current_load ?c) 0.0525) (+ (* (weight ?b) 0.0549) (+ (* (load_limit ?c) -0.1913) (* (fuel-cost ) -0.9786)))) -67.9747)
	(<= (+ (* (current_load ?c) 0.1846) (+ (* (fuel-cost ) -0.9756) (+ (* (load_limit ?c) -0.0651) (* (weight ?b) -0.0992)))) -29.0160)
	(<= (+ (* (current_load ?c) 0.1850) (+ (* (fuel-cost ) -0.9777) (+ (* (load_limit ?c) -0.0039) (* (weight ?b) -0.0994)))) -6.3916)
	(<= (+ (* (current_load ?c) 0.2209) (+ (* (load_limit ?c) -0.0719) (+ (* (fuel-cost ) -0.9707) (* (weight ?b) -0.0609)))) -27.5326)
	(<= (+ (* (current_load ?c) 0.2772) (+ (* (load_limit ?c) 0.0659) (+ (* (weight ?b) -0.0002) (* (fuel-cost ) -0.9585)))) 29.7966)
	(<= (+ (* (current_load ?c) 0.3100) (+ (* (weight ?b) 0.8759) (+ (* (fuel-cost ) -0.3692) (* (load_limit ?c) -0.0205)))) 67.1701)
	(<= (+ (* (current_load ?c) 0.5086) (+ (* (weight ?b) 0.2765) (+ (* (fuel-cost ) -0.8145) (* (load_limit ?c) -0.0376)))) 19.9179)
	(<= (+ (* (current_load ?c) 0.6073) (+ (* (fuel-cost ) 0.0487) (+ (* (weight ?b) 0.7910) (* (load_limit ?c) -0.0560)))) 64.1076)
	(<= (+ (* (current_load ?c) 0.6145) (+ (* (weight ?b) 0.7454) (+ (* (load_limit ?c) -0.0524) (* (fuel-cost ) -0.2531)))) 54.9443)
	(<= (+ (* (current_load ?c) 0.9720) (+ (* (load_limit ?c) -0.1049) (+ (* (fuel-cost ) -0.0904) (* (weight ?b) -0.1897)))) 61.7890)
	(<= (+ (* (fuel-cost ) 0.1916) (+ (* (load_limit ?c) 0.0597) (+ (* (weight ?b) -0.9336) (* (current_load ?c) -0.2970)))) -5.5269)
	(<= (+ (* (fuel-cost ) 0.3618) (+ (* (weight ?b) 0.7598) (+ (* (current_load ?c) 0.5389) (* (load_limit ?c) -0.0381)))) 74.8507)
	(<= (+ (* (fuel-cost ) 0.4497) (+ (* (load_limit ?c) -0.0295) (+ (* (current_load ?c) -0.3250) (* (weight ?b) -0.8314)))) -34.9659)
	(<= (+ (* (fuel-cost ) 0.5319) (+ (* (load_limit ?c) -0.0784) (+ (* (current_load ?c) -0.1893) (* (weight ?b) -0.8217)))) -36.6097)
	(<= (+ (* (fuel-cost ) 0.7449) (+ (* (weight ?b) -0.5358) (+ (* (current_load ?c) -0.3950) (* (load_limit ?c) -0.0456)))) -31.4677)
	(<= (+ (* (fuel-cost ) 0.8160) (+ (* (load_limit ?c) 0.0299) (+ (* (weight ?b) -0.3537) (* (current_load ?c) -0.4563)))) 2.1036)
	(<= (+ (* (fuel-cost ) 0.8370) (+ (* (weight ?b) -0.4346) (+ (* (load_limit ?c) -0.0747) (* (current_load ?c) -0.3239)))) -30.2807)
	(<= (+ (* (fuel-cost ) 0.8683) (+ (* (current_load ?c) -0.3042) (+ (* (weight ?b) -0.3840) (* (load_limit ?c) -0.0773)))) -26.8871)
	(<= (+ (* (fuel-cost ) 0.8726) (+ (* (load_limit ?c) 0.1163) (+ (* (weight ?b) -0.1716) (* (current_load ?c) -0.4422)))) 48.9953)
	(<= (+ (* (fuel-cost ) 0.8729) (+ (* (load_limit ?c) 0.0440) (+ (* (current_load ?c) -0.4329) (* (weight ?b) -0.2209)))) 15.9325)
	(<= (+ (* (fuel-cost ) 0.8793) (+ (* (load_limit ?c) 0.0488) (+ (* (current_load ?c) -0.4294) (* (weight ?b) -0.2003)))) 19.1732)
	(<= (+ (* (load_limit ?c) 0.0303) (+ (* (fuel-cost ) 0.8156) (+ (* (current_load ?c) -0.4565) (* (weight ?b) -0.3543)))) 2.2222)
	(<= (+ (* (load_limit ?c) 0.0524) (+ (* (fuel-cost ) 0.9431) (+ (* (weight ?b) 0.3178) (* (current_load ?c) -0.0820)))) 71.1657)
	(<= (+ (* (load_limit ?c) 0.1508) (+ (* (weight ?b) 0.4573) (+ (* (current_load ?c) -0.0640) (* (fuel-cost ) -0.8741)))) 85.9966)
	(<= (+ (* (load_limit ?c) 0.1875) (+ (* (fuel-cost ) 0.8785) (+ (* (current_load ?c) -0.4284) (* (weight ?b) -0.0976)))) 84.9050)
	(<= (+ (* (load_limit ?c) 0.2118) (+ (* (fuel-cost ) -0.4202) (+ (* (current_load ?c) -0.0024) (* (weight ?b) -0.8824)))) 66.7089)
	(<= (+ (* (weight ?b) 0.0504) (+ (* (current_load ?c) 0.0507) (+ (* (load_limit ?c) -0.1905) (* (fuel-cost ) -0.9791)))) -68.0826)
	(<= (+ (* (weight ?b) 0.1270) (+ (* (load_limit ?c) -0.1360) (+ (* (current_load ?c) -0.1624) (* (fuel-cost ) -0.9690)))) -48.4313)
	(<= (+ (* (weight ?b) 0.2136) (+ (* (current_load ?c) 0.2953) (+ (* (load_limit ?c) 0.1605) (* (fuel-cost ) -0.9173)))) 81.7257)
	(<= (+ (* (weight ?b) 0.2711) (+ (* (current_load ?c) -0.3863) (+ (* (load_limit ?c) -0.0259) (* (fuel-cost ) -0.8812)))) -3.1953)
	(<= (+ (* (weight ?b) 0.2800) (+ (* (load_limit ?c) -0.0484) (+ (* (fuel-cost ) -0.8712) (* (current_load ?c) -0.4003)))) -11.2516)
	(<= (+ (* (weight ?b) 0.7422) (+ (* (current_load ?c) 0.5666) (+ (* (fuel-cost ) 0.3534) (* (load_limit ?c) -0.0573)))) 68.6317)
	(<= (+ (* (weight ?b) 0.7722) (+ (* (current_load ?c) 0.5956) (+ (* (fuel-cost ) -0.2121) (* (load_limit ?c) -0.0626)))) 52.7696)
	(<= (load_limit ?c) 467))
	:effect (and (available ?a)
		(in ?b ?c)
		(not (lifting ?a ?b))
(increase (current_load ?c) (weight ?b))))

(:action unload
	:parameters (?a - hoist ?b - crate ?c - truck ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(available ?a)
	(in ?b ?c)
	(<= (+ (* (current_load ?c) 0.0091) (+ (* (load_limit ?c) 0.0589) (+ (* (weight ?b) -0.2505) (* (fuel-cost ) -0.9663)))) -20.4378)
	(<= (+ (* (current_load ?c) 0.0388) (+ (* (load_limit ?c) 0.1927) (+ (* (weight ?b) -0.0108) (* (fuel-cost ) -0.9804)))) 50.1360)
	(<= (+ (* (current_load ?c) 0.1341) (+ (* (weight ?b) 0.0404) (+ (* (load_limit ?c) -0.1202) (* (fuel-cost ) -0.9828)))) -51.6267)
	(<= (+ (* (current_load ?c) 0.1668) (+ (* (fuel-cost ) -0.3580) (+ (* (load_limit ?c) -0.0212) (* (weight ?b) -0.9185)))) -20.4835)
	(<= (+ (* (current_load ?c) 0.2762) (+ (* (load_limit ?c) -0.0133) (+ (* (weight ?b) -0.2083) (* (fuel-cost ) -0.9381)))) -14.6373)
	(<= (+ (* (current_load ?c) 0.4458) (+ (* (weight ?b) 0.1486) (+ (* (fuel-cost ) 0.8768) (* (load_limit ?c) -0.1018)))) 70.4887)
	(<= (+ (* (fuel-cost ) 0.2683) (+ (* (current_load ?c) 0.7982) (+ (* (load_limit ?c) 0.0164) (* (weight ?b) 0.5391)))) 141.9851)
	(<= (+ (* (fuel-cost ) 0.2962) (+ (* (weight ?b) 0.5255) (+ (* (load_limit ?c) 0.0118) (* (current_load ?c) 0.7975)))) 140.7630)
	(<= (+ (* (fuel-cost ) 0.5085) (+ (* (current_load ?c) 0.8206) (+ (* (weight ?b) 0.2473) (* (load_limit ?c) -0.0830)))) 104.2182)
	(<= (+ (* (fuel-cost ) 0.6728) (+ (* (current_load ?c) -0.7261) (+ (* (load_limit ?c) -0.1292) (* (weight ?b) -0.0583)))) -75.1973)
	(<= (+ (* (fuel-cost ) 0.6983) (+ (* (weight ?b) -0.4304) (+ (* (current_load ?c) -0.5717) (* (load_limit ?c) -0.0141)))) -37.9967)
	(<= (+ (* (fuel-cost ) 0.8822) (+ (* (current_load ?c) -0.4275) (+ (* (weight ?b) -0.1288) (* (load_limit ?c) -0.1500)))) -49.3850)
	(<= (+ (* (fuel-cost ) 0.8831) (+ (* (load_limit ?c) -0.0897) (+ (* (current_load ?c) -0.3359) (* (weight ?b) -0.3151)))) -29.2430)
	(<= (+ (* (fuel-cost ) 0.8988) (+ (* (current_load ?c) 0.4068) (+ (* (weight ?b) 0.1226) (* (load_limit ?c) -0.1077)))) 63.9227)
	(<= (+ (* (load_limit ?c) 0.1164) (+ (* (fuel-cost ) -0.5232) (+ (* (current_load ?c) -0.3159) (* (weight ?b) -0.7829)))) -28.8136)
	(<= (+ (* (load_limit ?c) 0.7747) (+ (* (current_load ?c) -0.4770) (+ (* (fuel-cost ) -0.3403) (* (weight ?b) -0.2376)))) 274.8512)
	(<= (+ (* (weight ?b) 0.1064) (+ (* (current_load ?c) -0.2630) (+ (* (load_limit ?c) -0.0758) (* (fuel-cost ) -0.9559)))) -72.0089)
	(<= (+ (* (weight ?b) 0.2160) (+ (* (current_load ?c) -0.2854) (+ (* (load_limit ?c) -0.0570) (* (fuel-cost ) -0.9320)))) -58.4944)
	(<= (+ (* (weight ?b) 0.2701) (+ (* (current_load ?c) 0.8104) (+ (* (fuel-cost ) 0.5146) (* (load_limit ?c) -0.0741)))) 107.6748)
	(<= (+ (* (weight ?b) 0.2719) (+ (* (current_load ?c) 0.9023) (+ (* (fuel-cost ) -0.3256) (* (load_limit ?c) -0.0767)))) 80.6993)
	(<= (+ (* (weight ?b) 0.2827) (+ (* (load_limit ?c) 0.5834) (+ (* (current_load ?c) -0.0872) (* (fuel-cost ) -0.7564)))) 230.8002)
	(<= (+ (* (weight ?b) 0.5180) (+ (* (load_limit ?c) 0.0031) (+ (* (fuel-cost ) 0.0501) (* (current_load ?c) 0.8539)))) 133.1203)
	(<= (+ (* (weight ?b) 0.7071) (* (current_load ?c) -0.7071)) 0)
	(<= (load_limit ?c) 467))
	:effect (and (lifting ?a ?b)
		(not (available ?a))
		(not (in ?b ?c))
(decrease (current_load ?c) (weight ?b))))

)
(define (domain depot)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	place locatable - object
	depot distributor - place
	truck hoist surface - locatable
	pallet crate - surface
)

(:predicates (at ?x - locatable ?y - place)
	(on ?x - crate ?y - surface)
	(in ?x - crate ?y - truck)
	(lifting ?x - hoist ?y - crate)
	(available ?x - hoist)
	(clear ?x - surface)
)

(:functions (load_limit ?t - truck)
	(current_load ?t - truck)
	(weight ?c - crate)
	(fuel-cost )
)

(:action drive
	:parameters (?a - truck ?b - place ?c - place)
	:precondition (and (at ?a ?b)
	(<= (* (current_load ?a) -1) 0)
	(<= (+ (* (current_load ?a) -0.9577) (+ (* (fuel-cost ) -0.0586) (* (load_limit ?a) -0.2819))) -100.7277)
	(<= (+ (* (current_load ?a) 0.3034) (+ (* (fuel-cost ) 0.9254) (* (load_limit ?a) -0.2272))) 30.2649)
	(<= (+ (* (current_load ?a) 0.3241) (+ (* (fuel-cost ) 0.9168) (* (load_limit ?a) -0.2334))) 27.9471)
	(<= (+ (* (current_load ?a) 0.9297) (+ (* (load_limit ?a) -0.3214) (* (fuel-cost ) -0.1799))) -32.5176)
	(<= (+ (* (fuel-cost ) -0.8045) (+ (* (load_limit ?a) -0.1101) (* (current_load ?a) -0.5837))) -51.8424)
	(<= (+ (* (fuel-cost ) 0.1588) (+ (* (current_load ?a) -0.9799) (* (load_limit ?a) -0.1204))) -33.5632)
	(<= (+ (* (fuel-cost ) 0.1611) (+ (* (load_limit ?a) -0.5306) (* (current_load ?a) -0.8322))) -148.4631)
	(<= (+ (* (fuel-cost ) 0.4175) (+ (* (current_load ?a) 0.8808) (* (load_limit ?a) -0.2233))) 26.1894)
	(<= (+ (* (fuel-cost ) 0.5347) (+ (* (current_load ?a) 0.8318) (* (load_limit ?a) -0.1488))) 57.5217)
	(<= (+ (* (fuel-cost ) 0.6455) (+ (* (current_load ?a) 0.7349) (* (load_limit ?a) -0.2080))) 37.0538)
	(<= (+ (* (fuel-cost ) 0.7526) (+ (* (current_load ?a) -0.6271) (* (load_limit ?a) -0.2008))) 6.9047)
	(<= (+ (* (load_limit ?a) -0.2154) (* (current_load ?a) -0.9765)) -76.2550)
	(<= (+ (* (load_limit ?a) 0.0348) (+ (* (current_load ?a) 0.2442) (* (fuel-cost ) -0.9691))) 12.7174)
	(<= (load_limit ?a) 449))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (fuel-cost ) 10)))

(:action lift
	:parameters (?a - hoist ?b - crate ?c - surface ?d - place)
	:precondition (and (at ?a ?d)
	(at ?b ?d)
	(at ?c ?d)
	(available ?a)
	(clear ?b)
	(on ?b ?c)
	(<= (* (fuel-cost ) -1) 0)
	(<= (* (weight ?b) -1) -12)
	(<= (+ (* (fuel-cost ) 0.1198) (* (weight ?b) 0.9928)) 86.6129)
	(<= (+ (* (fuel-cost ) 0.1351) (* (weight ?b) -0.9908)) -5.8099)
	(<= (+ (* (fuel-cost ) 0.7510) (* (weight ?b) -0.6603)) 40.4100)
	(<= (+ (* (weight ?b) -0.6616) (* (fuel-cost ) -0.7498)) -19.1870)
	(<= (+ (* (weight ?b) 0.0303) (* (fuel-cost ) -0.9995)) 1.1207)
	(<= (+ (* (weight ?b) 0.0587) (* (fuel-cost ) -0.9983)) 3.1123))
	:effect (and (clear ?c)
		(lifting ?a ?b)
		(not (at ?b ?d))
		(not (available ?a))
		(not (clear ?b))
		(not (on ?b ?c))
(increase (fuel-cost ) 1)))

(:action drop
	:parameters (?a - hoist ?b - crate ?c - surface ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(clear ?c)
	(lifting ?a ?b)
	(<= (* (weight ?b) -1) -12)
	(<= (+ (* (fuel-cost ) 0.1663) (* (weight ?b) 0.9861)) 95.1024)
	(<= (+ (* (weight ?b) -0.0454) (* (fuel-cost ) -0.9990)) -6.1754)
	(<= (+ (* (weight ?b) -0.8969) (* (fuel-cost ) -0.4423)) -44.8190)
	(<= (+ (* (weight ?b) 0.1618) (* (fuel-cost ) 0.9868)) 148.9786)
	(<= (+ (* (weight ?b) 0.9522) (* (fuel-cost ) -0.3054)) 65.7388))
	:effect (and (at ?b ?d)
		(available ?a)
		(clear ?b)
		(not (clear ?c))
		(not (lifting ?a ?b))
		(on ?b ?c) 
		))

(:action load
	:parameters (?a - hoist ?b - crate ?c - truck ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(lifting ?a ?b)
	(<= (* (current_load ?c) -1) 0)
	(<= (+ (* (current_load ?c) 0.2237) (+ (* (load_limit ?c) 0.0144) (+ (* (weight ?b) -0.5847) (* (fuel-cost ) -0.7796)))) -24.7468)
	(<= (+ (* (current_load ?c) 0.3954) (+ (* (weight ?b) -0.5501) (+ (* (fuel-cost ) -0.7335) (* (load_limit ?c) -0.0558)))) -38.3278)
	(<= (+ (* (current_load ?c) 0.4478) (+ (* (load_limit ?c) -0.1855) (+ (* (weight ?b) -0.7923) (* (fuel-cost ) -0.3706)))) -74.5924)
	(<= (+ (* (current_load ?c) 0.6393) (+ (* (fuel-cost ) 0.6702) (+ (* (weight ?b) -0.3341) (* (load_limit ?c) -0.1747)))) 10.6956)
	(<= (+ (* (current_load ?c) 0.6636) (+ (* (weight ?b) 0.7005) (+ (* (fuel-cost ) -0.1284) (* (load_limit ?c) -0.2292)))) -21.6622)
	(<= (+ (* (current_load ?c) 0.6706) (+ (* (fuel-cost ) 0.7029) (+ (* (weight ?b) 0.2305) (* (load_limit ?c) -0.0549)))) 75.8446)
	(<= (+ (* (current_load ?c) 0.6931) (+ (* (fuel-cost ) 0.5576) (+ (* (weight ?b) -0.3927) (* (load_limit ?c) -0.2335)))) -18.0113)
	(<= (+ (* (current_load ?c) 0.7754) (+ (* (fuel-cost ) 0.4731) (+ (* (load_limit ?c) -0.2683) (* (weight ?b) -0.3209)))) -30.3826)
	(<= (+ (* (current_load ?c) 0.7827) (+ (* (weight ?b) 0.5392) (+ (* (load_limit ?c) -0.2716) (* (fuel-cost ) -0.1515)))) -37.5846)
	(<= (+ (* (current_load ?c) 0.8435) (+ (* (fuel-cost ) -0.1633) (+ (* (weight ?b) -0.3490) (* (load_limit ?c) -0.3742)))) -96.3227)
	(<= (+ (* (current_load ?c) 0.8672) (+ (* (fuel-cost ) 0.1325) (+ (* (weight ?b) -0.3588) (* (load_limit ?c) -0.3189)))) -64.6338)
	(<= (+ (* (current_load ?c) 0.9088) (+ (* (fuel-cost ) 0.2516) (+ (* (weight ?b) 0.2100) (* (load_limit ?c) -0.2582)))) -19.6484)
	(<= (+ (* (current_load ?c) 0.9150) (+ (* (fuel-cost ) 0.2581) (+ (* (weight ?b) 0.1640) (* (load_limit ?c) -0.2631)))) -22.0862)
	(<= (+ (* (fuel-cost ) -0.4233) (+ (* (weight ?b) -0.9050) (+ (* (load_limit ?c) -0.0042) (* (current_load ?c) -0.0424)))) -40.1260)
	(<= (+ (* (fuel-cost ) 0.0482) (+ (* (weight ?b) 0.9547) (+ (* (load_limit ?c) -0.1554) (* (current_load ?c) -0.2492)))) 5.6667)
	(<= (+ (* (fuel-cost ) 0.1744) (+ (* (weight ?b) 0.3728) (+ (* (load_limit ?c) -0.1371) (* (current_load ?c) -0.9010)))) -13.5959)
	(<= (+ (* (fuel-cost ) 0.2861) (+ (* (current_load ?c) 0.2729) (+ (* (load_limit ?c) -0.0888) (* (weight ?b) -0.9142)))) -11.0691)
	(<= (+ (* (fuel-cost ) 0.3145) (+ (* (current_load ?c) 0.6343) (+ (* (weight ?b) 0.6882) (* (load_limit ?c) -0.1587)))) 22.4582)
	(<= (+ (* (fuel-cost ) 0.3441) (+ (* (weight ?b) 0.3531) (+ (* (current_load ?c) -0.8532) (* (load_limit ?c) -0.1700)))) -9.5884)
	(<= (+ (* (fuel-cost ) 0.3770) (+ (* (current_load ?c) 0.6205) (+ (* (weight ?b) 0.6762) (* (load_limit ?c) -0.1248)))) 38.1904)
	(<= (+ (* (fuel-cost ) 0.5648) (+ (* (weight ?b) 0.4236) (+ (* (current_load ?c) 0.7060) (* (load_limit ?c) -0.0565)))) 72.7722)
	(<= (+ (* (fuel-cost ) 0.5968) (+ (* (current_load ?c) 0.7028) (+ (* (load_limit ?c) -0.2555) (* (weight ?b) -0.2908)))) -18.9445)
	(<= (+ (* (fuel-cost ) 0.7986) (+ (* (current_load ?c) 0.5398) (+ (* (weight ?b) 0.1787) (* (load_limit ?c) -0.1976)))) 24.4317)
	(<= (+ (* (load_limit ?c) -0.0010) (+ (* (fuel-cost ) -0.4230) (+ (* (current_load ?c) -0.0555) (* (weight ?b) -0.9044)))) -39.4144)
	(<= (+ (* (load_limit ?c) 0.0004) (+ (* (weight ?b) -0.9068) (+ (* (fuel-cost ) -0.4180) (* (current_load ?c) -0.0540)))) -38.8013)
	(<= (+ (* (load_limit ?c) 0.0171) (+ (* (current_load ?c) 0.2186) (+ (* (fuel-cost ) -0.7858) (* (weight ?b) -0.5783)))) -23.9243)
	(<= (+ (* (load_limit ?c) 0.0181) (+ (* (current_load ?c) 0.2176) (+ (* (fuel-cost ) -0.7807) (* (weight ?b) -0.5855)))) -23.7021)
	(<= (+ (* (load_limit ?c) 0.0184) (+ (* (weight ?b) 0.6350) (+ (* (fuel-cost ) -0.2157) (* (current_load ?c) -0.7416)))) 28.9470)
	(<= (+ (* (load_limit ?c) 0.0363) (+ (* (current_load ?c) 0.2329) (+ (* (weight ?b) 0.2074) (* (fuel-cost ) -0.9494)))) 11.6366)
	(<= (+ (* (load_limit ?c) 0.0590) (+ (* (fuel-cost ) -0.1900) (+ (* (current_load ?c) -0.1813) (* (weight ?b) -0.9631)))) -11.4917)
	(<= (+ (* (load_limit ?c) 0.0592) (+ (* (current_load ?c) -0.1820) (+ (* (fuel-cost ) -0.1914) (* (weight ?b) -0.9627)))) -11.5334)
	(<= (+ (* (load_limit ?c) 0.0593) (+ (* (fuel-cost ) -0.1910) (+ (* (current_load ?c) -0.1826) (* (weight ?b) -0.9626)))) -11.4858)
	(<= (+ (* (weight ?b) 0.1910) (+ (* (fuel-cost ) 0.2547) (+ (* (current_load ?c) 0.9125) (* (load_limit ?c) -0.2569)))) -19.4018)
	(<= (+ (* (weight ?b) 0.2599) (+ (* (fuel-cost ) 0.7926) (+ (* (current_load ?c) 0.5190) (* (load_limit ?c) -0.1866)))) 29.4848)
	(<= (+ (* (weight ?b) 0.2790) (+ (* (fuel-cost ) 0.8511) (+ (* (current_load ?c) 0.3926) (* (load_limit ?c) -0.2089)))) 27.8346)
	(<= (+ (* (weight ?b) 0.7039) (+ (* (current_load ?c) 0.5889) (+ (* (fuel-cost ) 0.3680) (* (load_limit ?c) -0.1491)))) 28.2260)
	(<= (load_limit ?c) 449))
	:effect (and (available ?a)
		(in ?b ?c)
		(not (lifting ?a ?b))
(increase (current_load ?c) (weight ?b))))

(:action unload
	:parameters (?a - hoist ?b - crate ?c - truck ?d - place)
	:precondition (and (at ?a ?d)
	(at ?c ?d)
	(available ?a)
	(in ?b ?c)
	(<= (+ (* (current_load ?c) 0.0176) (+ (* (weight ?b) -0.9015) (+ (* (load_limit ?c) -0.0192) (* (fuel-cost ) -0.4320)))) -47.3088)
	(<= (+ (* (current_load ?c) 0.1913) (+ (* (fuel-cost ) 0.1120) (+ (* (load_limit ?c) -0.0009) (* (weight ?b) -0.9751)))) 6.8540)
	(<= (+ (* (current_load ?c) 0.2509) (+ (* (fuel-cost ) -0.2207) (+ (* (load_limit ?c) -0.0171) (* (weight ?b) -0.9424)))) -18.7107)
	(<= (+ (* (current_load ?c) 0.2832) (+ (* (fuel-cost ) 0.9155) (+ (* (weight ?b) 0.1172) (* (load_limit ?c) -0.2604)))) 30.3990)
	(<= (+ (* (current_load ?c) 0.3355) (+ (* (fuel-cost ) 0.9142) (+ (* (load_limit ?c) -0.2244) (* (weight ?b) -0.0357)))) 39.0424)
	(<= (+ (* (current_load ?c) 0.5672) (+ (* (fuel-cost ) 0.4400) (+ (* (load_limit ?c) -0.0363) (* (weight ?b) -0.6952)))) 47.7209)
	(<= (+ (* (current_load ?c) 0.5982) (+ (* (weight ?b) 0.6785) (+ (* (fuel-cost ) 0.3432) (* (load_limit ?c) -0.2530)))) 23.8652)
	(<= (+ (* (current_load ?c) 0.6534) (+ (* (fuel-cost ) 0.5995) (+ (* (load_limit ?c) -0.0706) (* (weight ?b) -0.4568)))) 59.9929)
	(<= (+ (* (current_load ?c) 0.8746) (+ (* (weight ?b) 0.3619) (* (load_limit ?c) -0.3226))) -19.3174)
	(<= (+ (* (current_load ?c) 0.8810) (+ (* (load_limit ?c) -0.2984) (+ (* (fuel-cost ) -0.2839) (* (weight ?b) -0.2327)))) -42.7141)
	(<= (+ (* (current_load ?c) 0.9221) (+ (* (fuel-cost ) -0.2136) (+ (* (load_limit ?c) -0.3154) (* (weight ?b) -0.0677)))) -36.8319)
	(<= (+ (* (fuel-cost ) 0.0740) (+ (* (current_load ?c) 0.3967) (+ (* (weight ?b) -0.9149) (* (load_limit ?c) -0.0088)))) 13.8421)
	(<= (+ (* (fuel-cost ) 0.0953) (+ (* (weight ?b) 0.4706) (+ (* (current_load ?c) 0.8273) (* (load_limit ?c) -0.2915)))) -2.7026)
	(<= (+ (* (fuel-cost ) 0.1169) (+ (* (current_load ?c) 0.4285) (+ (* (load_limit ?c) -0.0124) (* (weight ?b) -0.8959)))) 18.2598)
	(<= (+ (* (fuel-cost ) 0.1451) (+ (* (current_load ?c) 0.8708) (+ (* (weight ?b) 0.3603) (* (load_limit ?c) -0.3012)))) -3.7146)
	(<= (+ (* (fuel-cost ) 0.3690) (+ (* (weight ?b) 0.4020) (+ (* (current_load ?c) 0.8197) (* (load_limit ?c) -0.1742)))) 58.5773)
	(<= (+ (* (fuel-cost ) 0.5966) (+ (* (current_load ?c) 0.7167) (+ (* (weight ?b) -0.3457) (* (load_limit ?c) -0.1046)))) 57.0736)
	(<= (+ (* (fuel-cost ) 0.6225) (+ (* (weight ?b) 0.2806) (+ (* (current_load ?c) 0.6781) (* (load_limit ?c) -0.2718)))) 28.2682)
	(<= (+ (* (load_limit ?c) -0.0040) (+ (* (current_load ?c) -0.3547) (+ (* (fuel-cost ) -0.3416) (* (weight ?b) -0.8703)))) -56.4240)
	(<= (+ (* (load_limit ?c) -0.0042) (+ (* (fuel-cost ) -0.3441) (+ (* (current_load ?c) -0.3533) (* (weight ?b) -0.8699)))) -56.5624)
	(<= (+ (* (load_limit ?c) -0.4416) (+ (* (current_load ?c) -0.8290) (* (weight ?b) -0.3430))) -143.8916)
	(<= (+ (* (load_limit ?c) 0.0007) (+ (* (weight ?b) -0.9855) (+ (* (fuel-cost ) -0.0857) (* (current_load ?c) -0.1464)))) -26.0271)
	(<= (+ (* (load_limit ?c) 0.0498) (+ (* (fuel-cost ) -0.2943) (+ (* (current_load ?c) -0.5027) (* (weight ?b) -0.8113)))) -37.2383)
	(<= (+ (* (load_limit ?c) 0.0547) (+ (* (fuel-cost ) -0.6555) (+ (* (current_load ?c) -0.0548) (* (weight ?b) -0.7512)))) -31.6646)
	(<= (+ (* (load_limit ?c) 0.2158) (+ (* (fuel-cost ) -0.8727) (+ (* (weight ?b) -0.0893) (* (current_load ?c) -0.4288)))) 11.6268)
	(<= (+ (* (load_limit ?c) 0.2692) (+ (* (weight ?b) 0.1333) (+ (* (fuel-cost ) -0.8198) (* (current_load ?c) -0.4876)))) 38.3134)
	(<= (+ (* (load_limit ?c) 0.3348) (+ (* (weight ?b) 0.2725) (+ (* (fuel-cost ) -0.5829) (* (current_load ?c) -0.6884)))) 73.2164)
	(<= (+ (* (load_limit ?c) 0.3365) (+ (* (weight ?b) 0.1373) (+ (* (current_load ?c) -0.8040) (* (fuel-cost ) -0.4706)))) 72.9476)
	(<= (+ (* (weight ?b) -0.8689) (+ (* (fuel-cost ) -0.3429) (+ (* (current_load ?c) -0.3570) (* (load_limit ?c) -0.0048)))) -56.7805)
	(<= (+ (* (weight ?b) 0.1617) (+ (* (load_limit ?c) 0.2274) (+ (* (current_load ?c) -0.4547) (* (fuel-cost ) -0.8458)))) 23.8090)
	(<= (+ (* (weight ?b) 0.4880) (+ (* (current_load ?c) 0.8191) (* (load_limit ?c) -0.3015))) -11.8419)
	(<= (+ (* (weight ?b) 0.5236) (+ (* (current_load ?c) 0.7535) (+ (* (fuel-cost ) -0.3193) (* (load_limit ?c) -0.2371)))) -4.2074)
	(<= (+ (* (weight ?b) 0.7071) (* (current_load ?c) -0.7071)) 0)
	(<= (+ (* (weight ?b) 0.7301) (+ (* (load_limit ?c) 0.0454) (+ (* (fuel-cost ) -0.1338) (* (current_load ?c) -0.6685)))) 10.2451)
	(<= (+ (* (weight ?b) 0.7556) (+ (* (load_limit ?c) 0.0272) (+ (* (current_load ?c) -0.6488) (* (fuel-cost ) -0.0862)))) 8.9104)
	(<= (+ (* (weight ?b) 0.8791) (+ (* (load_limit ?c) -0.0560) (* (current_load ?c) -0.4734))) 4.4911)
	(<= (load_limit ?c) 449))
	:effect (and (lifting ?a ?b)
		(not (available ?a))
		(not (in ?b ?c))
(decrease (current_load ?c) (weight ?b))))

)
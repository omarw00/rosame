(define (domain driverlog)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	location locatable - object
	driver truck obj - locatable
)

(:predicates (at ?obj - locatable ?loc - location)
	(in ?obj1 - obj ?obj - truck)
	(driving ?d - driver ?v - truck)
	(link ?x - location ?y - location)
	(path ?x - location ?y - location)
	(empty ?v - truck)
)

(:functions (time-to-walk ?l1 - location ?l2 - location)
	(time-to-drive ?l1 - location ?l2 - location)
	(driven )
	(walked )
)

(:action load-truck
	:parameters (?a - obj ?b - truck ?c - location)
	:precondition (and (at ?a ?c)
	(at ?b ?c)
	(<= (* (driven ) -1) 0)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.2987) (* (walked ) 0.9543)) 167.2986)
	(<= (walked ) 144))
	:effect (and (in ?a ?b)
		(not (at ?a ?c)) 
		))

(:action unload-truck
	:parameters (?a - obj ?b - truck ?c - location)
	:precondition (and (at ?b ?c)
	(in ?a ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (walked ) -0.7359) (* (driven ) -0.6771)) -81.2468)
	(<= (+ (* (walked ) 0.7809) (* (driven ) -0.6247)) 59.3460)
	(<= (+ (* (walked ) 0.9556) (* (driven ) 0.2947)) 223.0583)
	(<= (+ (* (walked ) 0.9860) (* (driven ) -0.1669)) 93.5923))
	:effect (and (at ?a ?c)
		(not (in ?a ?b)) 
		))

(:action board-truck
	:parameters (?a - driver ?b - truck ?c - location)
	:precondition (and (at ?a ?c)
	(at ?b ?c)
	(empty ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.8514) (* (walked ) -0.5246)) 702.3744)
	(<= (+ (* (walked ) 0.5704) (* (driven ) -0.8214)) 0)
	(<= (+ (* (walked ) 0.9982) (* (driven ) 0.0607)) 152.5965)
	(<= (walked ) 144))
	:effect (and (driving ?a ?b)
		(not (at ?a ?c))
		(not (empty ?b)) 
		))

(:action disembark-truck
	:parameters (?a - driver ?b - truck ?c - location)
	:precondition (and (at ?b ?c)
	(driving ?a ?b)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.0590) (* (walked ) 0.9983)) 155.0684)
	(<= (+ (* (driven ) 0.8243) (* (walked ) -0.5662)) 730.3163)
	(<= (+ (* (walked ) -0.8764) (* (driven ) -0.4815)) -116.5349)
	(<= (+ (* (walked ) 0.8902) (* (driven ) -0.4555)) 61.6963)
	(<= (walked ) 144))
	:effect (and (at ?a ?c)
		(empty ?b)
		(not (driving ?a ?b)) 
		))

(:action drive-truck
	:parameters (?a - truck ?b - location ?c - location ?d - driver)
	:precondition (and (at ?a ?b)
	(driving ?d ?a)
	(link ?b ?c)
	(link ?c ?b)
	(<= (* (driven ) -1) 0)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.0068) (+ (* (time-to-drive ?c ?b) 0.9831) (* (walked ) -0.1828))) 71.9848)
	(<= (+ (* (driven ) 0.0457) (+ (* (time-to-drive ?c ?b) 0.9972) (* (walked ) -0.0595))) 102.4013)
	(<= (+ (* (driven ) 0.0577) (+ (* (walked ) 0.5367) (* (time-to-drive ?c ?b) -0.8418))) 46.9835)
	(<= (+ (* (driven ) 0.0587) (+ (* (time-to-drive ?c ?b) -0.9982) (* (walked ) -0.0129))) -9.5122)
	(<= (+ (* (driven ) 0.0646) (+ (* (walked ) 0.0050) (* (time-to-drive ?c ?b) -0.9979))) -7.5428)
	(<= (+ (* (driven ) 0.0650) (+ (* (walked ) 0.9815) (* (time-to-drive ?c ?b) -0.1801))) 142.5458)
	(<= (+ (* (driven ) 0.0676) (+ (* (walked ) 0.0289) (* (time-to-drive ?c ?b) -0.9973))) -5.0589)
	(<= (+ (* (driven ) 0.1015) (+ (* (time-to-drive ?c ?b) 0.9860) (* (walked ) -0.1323))) 143.8842)
	(<= (+ (* (time-to-drive ?c ?b) -0.8974) (+ (* (walked ) -0.0195) (* (driven ) -0.4409))) -19.7418)
	(<= (+ (* (time-to-drive ?c ?b) 0.9594) (+ (* (driven ) -0.0925) (* (walked ) -0.2665))) 57.5634)
	(<= (+ (* (time-to-drive ?c ?b) 0.9762) (* (walked ) -0.2169)) 66.3807)
	(<= (+ (* (walked ) -0.1191) (* (time-to-drive ?c ?b) -0.9929)) -21.8433)
	(<= (+ (* (walked ) 0.6332) (* (time-to-drive ?c ?b) -0.7740)) 55.5842)
	(<= (+ (* (walked ) 0.7165) (+ (* (time-to-drive ?c ?b) -0.4657) (* (driven ) -0.5194))) 56.6003)
	(<= (+ (* (walked ) 0.8456) (+ (* (time-to-drive ?c ?b) -0.4698) (* (driven ) -0.2537))) 74.7855)
	(<= (walked ) 144)
	(= (time-to-drive ?b ?c) (time-to-drive ?c ?b)))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (driven ) (time-to-drive ?b ?c))))

(:action walk
	:parameters (?a - driver ?b - location ?c - location)
	:precondition (and (at ?a ?b)
	(path ?b ?c)
	(path ?c ?b)
	(<= (* (driven ) -1) 0)
	(<= (* (time-to-walk ?c ?b) -1) -8)
	(<= (* (walked ) -1) 0)
	(<= (+ (* (driven ) 0.0090) (+ (* (walked ) -0.0225) (* (time-to-walk ?c ?b) -0.9997))) -9.8847)
	(<= (+ (* (driven ) 0.0107) (+ (* (walked ) -0.0086) (* (time-to-walk ?c ?b) -0.9999))) -8.5731)
	(<= (+ (* (driven ) 0.0177) (+ (* (walked ) -0.6050) (* (time-to-walk ?c ?b) -0.7960))) -33.4336)
	(<= (+ (* (driven ) 0.0232) (+ (* (walked ) 0.0323) (* (time-to-walk ?c ?b) -0.9992))) -2.0164)
	(<= (+ (* (driven ) 0.0363) (+ (* (walked ) -0.6047) (* (time-to-walk ?c ?b) -0.7956))) -26.7128)
	(<= (+ (* (driven ) 0.0457) (+ (* (time-to-walk ?c ?b) -0.8329) (* (walked ) -0.5515))) -21.1010)
	(<= (+ (* (time-to-walk ?c ?b) 0.7740) (+ (* (driven ) 0.0361) (* (walked ) 0.6321))) 98.1213)
	(<= (+ (* (time-to-walk ?c ?b) 0.9055) (+ (* (driven ) 0.0204) (* (walked ) 0.4239))) 85.1171)
	(<= (+ (* (walked ) -0.3751) (+ (* (driven ) -0.0251) (* (time-to-walk ?c ?b) -0.9267))) -38.9195)
	(<= (+ (* (walked ) 0.5517) (+ (* (driven ) 0.0360) (* (time-to-walk ?c ?b) 0.8332))) 93.5256)
	(<= (+ (* (walked ) 0.7087) (+ (* (driven ) -0.6851) (* (time-to-walk ?c ?b) -0.1687))) 58.1792)
	(= (time-to-walk ?b ?c) (time-to-walk ?c ?b)))
	:effect (and (at ?a ?c)
		(not (at ?a ?b))
(increase (walked ) (time-to-walk ?b ?c))))

)
(define (domain sailing)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	boat person - object
)

(:predicates (saved ?t - person)
)

(:functions (x ?b - boat)
	(y ?b - boat)
	(d ?t - person)
)

(:action go_north_east
	:parameters (?b - boat)
	:precondition (and (<= (* (x ?b) -1) 14)
	(<= (* (y ?b) -1) 0)
	(<= (+ (* (x ?b) 0.5145) (* (y ?b) 0.8575)) 82.8338)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) -0.7071)) 1.4142)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 68.5894)
	(<= (+ (* (x ?b) 0.7338) (* (y ?b) -0.6794)) 1.7121)
	(<= (+ (* (x ?b) 0.7894) (* (y ?b) -0.6139)) 3.9468)
	(<= (+ (* (x ?b) 0.9158) (* (y ?b) 0.4017)) 46.4160)
	(<= (+ (* (x ?b) 0.9899) (* (y ?b) -0.1414)) 19.0919)
	(<= (+ (* (y ?b) -0.3162) (* (x ?b) -0.9487)) 7.5895)
	(<= (+ (* (y ?b) -0.5755) (* (x ?b) -0.8178)) 2.4534)
	(<= (+ (* (y ?b) 0.0317) (* (x ?b) -0.9995)) 14.7545)
	(<= (+ (* (y ?b) 0.7071) (* (x ?b) -0.7071)) 70.0036))
	:effect (and 
(increase (y ?b) 1.5000)		
(increase (x ?b) 1.5000)))

(:action go_north_west
	:parameters (?b - boat)
	:precondition (and (<= (* (x ?b) -1) 12.5000)
	(<= (* (y ?b) -1) 0)
	(<= (+ (* (x ?b) -0.7071) (* (y ?b) -0.7071)) -0.7071)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 70.7107)
	(<= (+ (* (x ?b) 0.7442) (* (y ?b) -0.6679)) 2.2327)
	(<= (+ (* (x ?b) 0.7894) (* (y ?b) -0.6139)) 4.2099)
	(<= (+ (* (x ?b) 0.9158) (* (y ?b) 0.4017)) 48.3922)
	(<= (+ (* (x ?b) 0.9899) (* (y ?b) -0.1414)) 20.3647)
	(<= (+ (* (y ?b) -0.3162) (* (x ?b) -0.9487)) 6.6408)
	(<= (+ (* (y ?b) 0.0526) (* (x ?b) -0.9986)) 13.6653)
	(<= (+ (* (y ?b) 0.1821) (* (x ?b) -0.9833)) 20.1027)
	(<= (+ (* (y ?b) 0.3162) (* (x ?b) -0.9487)) 30.3579))
	:effect (and 
(decrease (x ?b) 1.5000)		
(increase (y ?b) 1.5000)))

(:action go_est
	:parameters (?b - boat)
	:precondition (and (= (x ?b) 0)
	(= (y ?b) 0))
	:effect (and 
(assign (x ?b) 3)))

(:action go_west
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) 0.7849) (* (y ?b) -0.6196)) 0)
	(<= (+ (* (y ?b) -0.1029) (* (x ?b) -0.9947)) 0)
	(<= (+ (* (y ?b) 0.0250) (* (x ?b) 0.9997)) 23.2052)
	(<= (+ (* (y ?b) 0.4175) (* (x ?b) 0.9087)) 48.1353)
	(<= (+ (* (y ?b) 0.8137) (* (x ?b) -0.5812)) 76.0260)
	(<= (+ (* (y ?b) 0.8742) (* (x ?b) 0.4856)) 82.3650)
	(<= (y ?b) 92))
	:effect (and 
(decrease (x ?b) 3)))

(:action go_south_west
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) -0.7071) (* (y ?b) -0.7071)) -53.0330)
	(<= (+ (* (x ?b) 0.4472) (* (y ?b) 0.8944)) 84.9706)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) -0.7071)) -55.8614)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 70.0036)
	(<= (+ (* (y ?b) 0.8944) (* (x ?b) -0.4472)) 83.1817))
	:effect (and 
(increase (x ?b) 2)		
(decrease (y ?b) 2)))

(:action go_south_east
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) -0.9899) (* (y ?b) -0.1414)) -2.6870)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) -0.7071)) -33.2340)
	(<= (+ (* (x ?b) 0.9899) (* (y ?b) -0.1414)) -8.3439)
	(<= (+ (* (y ?b) 0.3162) (* (x ?b) 0.9487)) 31.3065)
	(<= (+ (* (y ?b) 0.7071) (* (x ?b) -0.7071)) 70.0036))
	:effect (and 
(decrease (x ?b) 2)		
(decrease (y ?b) 2)))

(:action go_south
	:parameters (?b - boat)
	:precondition (and (= (x ?b) 1.5000)
	(= (y ?b) 46.5000))
	:effect (and 
(assign (y ?b) 44.5000)))

(:action save_person
	:parameters (?b - boat ?t - person)
	:precondition (and (not (saved ?t))
	(<= (+ (* (d ?t) 0.1973) (+ (* (x ?b) 0.9645) (* (y ?b) -0.1754))) 10.1714)
	(<= (+ (* (d ?t) 0.2242) (+ (* (x ?b) 0.9717) (* (y ?b) -0.0747))) 20.0313)
	(<= (+ (* (d ?t) 0.3015) (+ (* (x ?b) 0.9045) (* (y ?b) -0.3015))) 6.9348)
	(<= (+ (* (d ?t) 0.3069) (+ (* (x ?b) 0.9462) (* (y ?b) -0.1023))) 23.1955)
	(<= (+ (* (d ?t) 0.3609) (+ (* (x ?b) -0.6875) (* (y ?b) -0.6302))) -1.1687)
	(<= (+ (* (d ?t) 0.4821) (+ (* (x ?b) 0.8002) (* (y ?b) -0.3567))) 13.4014)
	(<= (+ (* (d ?t) 0.5410) (+ (* (x ?b) -0.5833) (* (y ?b) -0.6058))) -0.7355)
	(<= (+ (* (d ?t) 0.5774) (+ (* (x ?b) -0.5774) (* (y ?b) -0.5774))) 0)
	(<= (+ (* (d ?t) 0.5774) (+ (* (x ?b) 0.5774) (* (y ?b) -0.5774))) 0)
	(<= (+ (* (d ?t) 0.6046) (+ (* (y ?b) -0.6549) (* (x ?b) -0.4534))) -0.7557)
	(<= (+ (* (d ?t) 0.6687) (+ (* (x ?b) 0.1672) (* (y ?b) -0.7245))) -0.8359)
	(<= (+ (* (x ?b) 0.0571) (+ (* (y ?b) 0.8877) (* (d ?t) -0.4568))) 44.1262)
	(<= (+ (* (x ?b) 0.3206) (+ (* (y ?b) 0.8161) (* (d ?t) -0.4809))) 37.2620)
	(<= (+ (* (x ?b) 0.3622) (+ (* (y ?b) 0.7869) (* (d ?t) -0.4996))) 34.0359)
	(<= (+ (* (x ?b) 0.5123) (+ (* (y ?b) 0.5898) (* (d ?t) -0.6242))) 13.0230)
	(<= (+ (* (x ?b) 0.5774) (+ (* (y ?b) 0.5774) (* (d ?t) -0.5774))) 14.4338)
	(<= (+ (* (x ?b) 0.6467) (+ (* (d ?t) 0.5174) (* (y ?b) -0.5605))) 0.1293)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 70.7107)
	(<= (+ (* (x ?b) 0.9307) (+ (* (d ?t) 0.2482) (* (y ?b) -0.2689))) 7.1971)
	(<= (+ (* (x ?b) 0.9883) (+ (* (d ?t) 0.1140) (* (y ?b) -0.1014))) 10.8332)
	(<= (+ (* (y ?b) -0.6750) (+ (* (d ?t) -0.0460) (* (x ?b) -0.7364))) -2.1171)
	(<= (+ (* (y ?b) 0.2827) (+ (* (x ?b) 0.1539) (* (d ?t) -0.9468))) 0.6549)
	(<= (+ (* (y ?b) 0.3097) (+ (* (d ?t) -0.1372) (* (x ?b) -0.9409))) 17.8748)
	(<= (+ (* (y ?b) 0.3671) (+ (* (d ?t) -0.2006) (* (x ?b) -0.9083))) 18.1073)
	(<= (+ (* (y ?b) 0.5345) (+ (* (d ?t) -0.2673) (* (x ?b) -0.8018))) 27.3943)
	(<= (+ (* (y ?b) 0.5774) (+ (* (d ?t) -0.5774) (* (x ?b) -0.5774))) 14.4338)
	(<= (+ (* (y ?b) 0.6150) (+ (* (d ?t) -0.6755) (* (x ?b) -0.4068))) 12.3482)
	(<= (+ (* (y ?b) 0.6182) (+ (* (x ?b) 0.0507) (* (d ?t) -0.7844))) 7.1471)
	(<= (+ (* (y ?b) 0.6667) (+ (* (d ?t) -0.3333) (* (x ?b) -0.6667))) 34)
	(<= (+ (* (y ?b) 0.7215) (+ (* (x ?b) 0.4499) (* (d ?t) -0.5263))) 27.8002)
	(<= (+ (* (y ?b) 0.8904) (+ (* (x ?b) -0.0189) (* (d ?t) -0.4547))) 44.4844))
	:effect (and (saved ?t) 
		))

)
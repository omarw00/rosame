(define (domain sailing)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	boat person - object
)

(:predicates (saved ?t - person)
)

(:functions (x ?b - boat)
	(y ?b - boat)
	(d ?t - person)
)

(:action go_north_east
	:parameters (?a - boat)
	:precondition (and (<= (* (y ?a) -1) 0)
	(<= (+ (* (x ?a) -0.9962) (* (y ?a) -0.0874)) 0.9962)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) -0.7071)) 2.1213)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 68.5894)
	(<= (+ (* (x ?a) 0.7645) (* (y ?a) -0.6446)) 3.5528)
	(<= (+ (* (x ?a) 0.9985) (* (y ?a) -0.0555)) 32.9492)
	(<= (+ (* (y ?a) 0.0508) (* (x ?a) -0.9987)) 8.8868)
	(<= (+ (* (y ?a) 0.1414) (* (x ?a) -0.9899)) 16.6877)
	(<= (+ (* (y ?a) 0.6196) (* (x ?a) 0.7849)) 61.7166)
	(<= (+ (* (y ?a) 0.6616) (* (x ?a) 0.7498)) 64.7066)
	(<= (+ (* (y ?a) 0.7071) (* (x ?a) -0.7071)) 70.7107))
	:effect (and 
(increase (y ?a) 1.5000)		
(increase (x ?a) 1.5000)))

(:action go_north_west
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) -0.7071) (* (y ?a) -0.7071)) -5.6569)
	(<= (+ (* (x ?a) -0.9939) (* (y ?a) -0.1104)) -2.6504)
	(<= (+ (* (x ?a) 0.6690) (* (y ?a) -0.7433)) 1.1149)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.8321) (* (y ?a) -0.5547)) 5.8244)
	(<= (+ (* (x ?a) 0.8968) (* (y ?a) -0.4424)) 9.0757)
	(<= (+ (* (y ?a) -0.0335) (* (x ?a) -0.9994)) -1.7037)
	(<= (+ (* (y ?a) -0.0476) (* (x ?a) -0.9989)) -1.9977)
	(<= (+ (* (y ?a) 0.6196) (* (x ?a) 0.7849)) 63.8234)
	(<= (+ (* (y ?a) 0.6616) (* (x ?a) 0.7498)) 66.8238)
	(<= (+ (* (y ?a) 0.7071) (* (x ?a) -0.7071)) 68.5894))
	:effect (and 
(increase (y ?a) 1.5000)		
(decrease (x ?a) 1.5000)))

(:action go_est
	:parameters (?a - boat)
	:precondition (and (= (x ?a) 0)
	(= (y ?a) 0))
	:effect (and 
(assign (x ?a) 3)))

(:action go_west
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) 0.5039) (* (y ?a) 0.8638)) 76.9843)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) -0.7071)) -0.7071)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 67.8823)
	(<= (+ (* (y ?a) -0.2912) (* (x ?a) -0.9567)) -13.7262)
	(<= (+ (* (y ?a) -0.9037) (* (x ?a) -0.4281)) -23.5447)
	(<= (+ (* (y ?a) 0.0508) (* (x ?a) -0.9987)) 5.8907)
	(<= (+ (* (y ?a) 0.3406) (* (x ?a) 0.9402)) 47.0913)
	(<= (y ?a) 86.5000))
	:effect (and 
(decrease (x ?a) 3)))

(:action go_south_west
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.8756) (* (y ?a) -0.4831)) -25.4219)
	(<= (+ (* (x ?a) 0.9487) (* (y ?a) -0.3162)) -11.3842)
	(<= (+ (* (y ?a) 0.0392) (* (x ?a) -0.9992)) 3.9186))
	:effect (and 
(increase (x ?a) 2)		
(decrease (y ?a) 2)))

(:action go_south_east
	:parameters (?a - boat)
	:precondition (and (<= (* (x ?a) -1) 0)
	(<= (+ (* (x ?a) 0.2983) (* (y ?a) 0.9545)) 83.6363)
	(<= (+ (* (x ?a) 0.8423) (* (y ?a) -0.5391)) -27.4917)
	(<= (+ (* (x ?a) 0.9487) (* (y ?a) -0.3162)) -8.8544)
	(<= (+ (* (y ?a) 0.0830) (* (x ?a) -0.9965)) 5.2319))
	:effect (and 
(decrease (y ?a) 2)		
(decrease (x ?a) 2)))

(:action go_south
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) -0.9943) (* (y ?a) -0.1065)) -6.8181)
	(<= (+ (* (y ?a) 0.1293) (* (x ?a) -0.9916)) 8.2777)
	(<= (x ?a) 3))
	:effect (and 
(decrease (y ?a) 2)))

(:action save_person
	:parameters (?a - boat ?b - person)
	:precondition (and (<= (* (x ?a) -1) 0.5000)
	(<= (+ (* (d ?b) 0.0879) (+ (* (x ?a) 0.9930) (* (y ?a) -0.0791))) 11.4853)
	(<= (+ (* (d ?b) 0.2986) (+ (* (x ?a) -0.9077) (* (y ?a) -0.2947))) 0.3930)
	(<= (+ (* (d ?b) 0.5774) (+ (* (x ?a) -0.5774) (* (y ?a) -0.5774))) 0)
	(<= (+ (* (d ?b) 0.5774) (+ (* (x ?a) 0.5774) (* (y ?a) -0.5774))) 0)
	(<= (+ (* (x ?a) 0.1119) (+ (* (y ?a) 0.5146) (* (d ?b) -0.8501))) 5.4811)
	(<= (+ (* (x ?a) 0.2106) (+ (* (y ?a) 0.9124) (* (d ?b) -0.3509))) 56.4999)
	(<= (+ (* (x ?a) 0.3594) (+ (* (y ?a) 0.8660) (* (d ?b) -0.3476))) 52.7578)
	(<= (+ (* (x ?a) 0.4243) (+ (* (d ?b) 0.5657) (* (y ?a) -0.7071))) -1.6971)
	(<= (+ (* (x ?a) 0.5147) (+ (* (y ?a) 0.7632) (* (d ?b) -0.3905))) 41.4461)
	(<= (+ (* (x ?a) 0.5758) (+ (* (d ?b) 0.4742) (* (y ?a) -0.6661))) -1.8628)
	(<= (+ (* (x ?a) 0.5774) (+ (* (y ?a) 0.5774) (* (d ?b) -0.5774))) 14.4338)
	(<= (+ (* (x ?a) 0.5987) (+ (* (d ?b) 0.5089) (* (y ?a) -0.6186))) -1.0177)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.7322) (+ (* (d ?b) 0.5248) (* (y ?a) -0.4341))) 9.3563)
	(<= (+ (* (x ?a) 0.7464) (+ (* (d ?b) 0.5157) (* (y ?a) -0.4207))) 9.9473)
	(<= (+ (* (x ?a) 0.7842) (+ (* (d ?b) 0.4613) (* (y ?a) -0.4151))) 7.1496)
	(<= (+ (* (x ?a) 0.8245) (+ (* (d ?b) 0.4947) (* (y ?a) -0.2748))) 21.9860)
	(<= (+ (* (x ?a) 0.9133) (+ (* (d ?b) 0.4059) (* (y ?a) -0.0338))) 37.2081)
	(<= (+ (* (y ?a) 0.0204) (+ (* (d ?b) -0.0712) (* (x ?a) -0.9973))) -0.6106)
	(<= (+ (* (y ?a) 0.0204) (+ (* (x ?a) -0.9996) (* (d ?b) -0.0214))) 0.4875)
	(<= (+ (* (y ?a) 0.0208) (+ (* (x ?a) -0.9996) (* (d ?b) -0.0213))) 0.5086)
	(<= (+ (* (y ?a) 0.0222) (+ (* (x ?a) -0.9995) (* (d ?b) -0.0222))) 0.5553)
	(<= (+ (* (y ?a) 0.0236) (+ (* (d ?b) -0.0221) (* (x ?a) -0.9995))) 0.6781)
	(<= (+ (* (y ?a) 0.0301) (+ (* (d ?b) -0.1054) (* (x ?a) -0.9940))) -0.9036)
	(<= (+ (* (y ?a) 0.3115) (+ (* (x ?a) -0.5346) (* (d ?b) -0.7856))) -2.6451)
	(<= (+ (* (y ?a) 0.3162) (* (x ?a) -0.9487)) 31.6228)
	(<= (+ (* (y ?a) 0.5518) (+ (* (x ?a) -0.8065) (* (d ?b) -0.2122))) 34.1703))
	:effect (and (saved ?b) 
		))

)
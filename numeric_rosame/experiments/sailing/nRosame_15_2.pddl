(define (domain sailing)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	boat person - object
)

(:predicates (saved ?t - person)
)

(:functions (x ?b - boat)
	(y ?b - boat)
	(d ?t - person)
)

(:action go_north_east
	:parameters (?a - boat)
	:precondition (and (<= (* (x ?a) -1) 6)
	(<= (* (y ?a) -1) 0)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) -0.7071)) 2.1213)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 68.5894)
	(<= (+ (* (x ?a) 0.7433) (* (y ?a) -0.6690)) 3.0103)
	(<= (+ (* (x ?a) 0.7557) (* (y ?a) 0.6549)) 64.9893)
	(<= (+ (* (y ?a) -0.0700) (* (x ?a) -0.9975)) 1.9951)
	(<= (+ (* (y ?a) 0.1560) (* (x ?a) -0.9878)) 18.0917)
	(<= (+ (* (y ?a) 0.3162) (* (x ?a) 0.9487)) 51.2289)
	(<= (+ (* (y ?a) 0.7071) (* (x ?a) -0.7071)) 70.7107))
	:effect (and 
(increase (x ?a) 1.5000)		
(increase (y ?a) 1.5000)))

(:action go_north_west
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) 0.6000) (* (y ?a) -0.8000)) 0.6000)
	(<= (+ (* (x ?a) 0.6690) (* (y ?a) -0.7433)) 1.1149)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.7433) (* (y ?a) -0.6690)) 3.1218)
	(<= (+ (* (y ?a) -0.0496) (* (x ?a) -0.9988)) -0.9988)
	(<= (+ (* (y ?a) 0.0400) (* (x ?a) -0.9992)) 5.3157)
	(<= (+ (* (y ?a) 0.3162) (* (x ?a) 0.9487)) 53.1263)
	(<= (+ (* (y ?a) 0.5812) (* (x ?a) -0.8137)) 56.7288)
	(<= (+ (* (y ?a) 0.6616) (* (x ?a) 0.7498)) 67.3090))
	:effect (and 
(increase (y ?a) 1.5000)		
(decrease (x ?a) 1.5000)))

(:action go_est
	:parameters (?a - boat)
	:precondition (and (= (x ?a) 0)
	(= (y ?a) 0))
	:effect (and 
(assign (x ?a) 3)))

(:action go_west
	:parameters (?a - boat)
	:precondition (and (<= (* (x ?a) -1) 3)
	(<= (+ (* (x ?a) 0.2124) (* (y ?a) 0.9772)) 85.4817)
	(<= (+ (* (x ?a) 0.6718) (* (y ?a) -0.7407)) 0)
	(<= (+ (* (x ?a) 0.7682) (* (y ?a) -0.6402)) 4.0332)
	(<= (+ (* (y ?a) -0.0526) (* (x ?a) -0.9986)) 0)
	(<= (+ (* (y ?a) 0.1738) (* (x ?a) -0.9848)) 16.5096)
	(<= (+ (* (y ?a) 0.3406) (* (x ?a) 0.9402)) 47.0913)
	(<= (+ (* (y ?a) 0.5547) (* (x ?a) 0.8321)) 59.9076)
	(<= (y ?a) 86.5000))
	:effect (and 
(decrease (x ?a) 3)))

(:action go_south_west
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) -0.7740) (* (y ?a) -0.6332)) -37.9943)
	(<= (+ (* (x ?a) 0.3714) (* (y ?a) -0.9285)) -55.7086)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.9578) (* (y ?a) -0.2873)) -8.8120)
	(<= (+ (* (y ?a) 0.7071) (* (x ?a) -0.7071)) 70.7107))
	:effect (and 
(decrease (y ?a) 2)		
(increase (x ?a) 2)))

(:action go_south_east
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) 0.7071) (* (y ?a) -0.7071)) -33.9411)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.9767) (* (y ?a) -0.2144)) 0)
	(<= (+ (* (y ?a) -0.5145) (* (x ?a) -0.8575)) -29.4978)
	(<= (+ (* (y ?a) 0.7071) (* (x ?a) -0.7071)) 70.7107))
	:effect (and 
(decrease (x ?a) 2)		
(decrease (y ?a) 2)))

(:action go_south
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) -0.9943) (* (y ?a) -0.1065)) -6.8181)
	(<= (+ (* (x ?a) 0.9450) (* (y ?a) -0.3271)) -8.9410)
	(<= (+ (* (y ?a) -0.0963) (* (x ?a) -0.9954)) -6.1647)
	(<= (+ (* (y ?a) 0.3387) (* (x ?a) 0.9409)) 32.2913)
	(<= (+ (* (y ?a) 0.5145) (* (x ?a) -0.8575)) 42.1887))
	:effect (and 
(decrease (y ?a) 2)))

(:action save_person
	:parameters (?a - boat ?b - person)
	:precondition (and (<= (+ (* (d ?b) 0.5180) (+ (* (x ?a) 0.7447) (* (y ?a) -0.4209))) 10.1014)
	(<= (+ (* (d ?b) 0.5207) (+ (* (x ?a) 0.7365) (* (y ?a) -0.4318))) 9.2703)
	(<= (+ (* (d ?b) 0.5774) (+ (* (x ?a) -0.5774) (* (y ?a) -0.5774))) 0)
	(<= (+ (* (d ?b) 0.5774) (+ (* (x ?a) 0.5774) (* (y ?a) -0.5774))) 0)
	(<= (+ (* (x ?a) 0.1922) (+ (* (y ?a) 0.9128) (* (d ?b) -0.3603))) 55.6098)
	(<= (+ (* (x ?a) 0.4377) (+ (* (y ?a) 0.8069) (* (d ?b) -0.3966))) 44.3950)
	(<= (+ (* (x ?a) 0.5179) (+ (* (d ?b) 0.5754) (* (y ?a) -0.6330))) -0.6905)
	(<= (+ (* (x ?a) 0.5414) (+ (* (y ?a) 0.6082) (* (d ?b) -0.5805))) 16.2827)
	(<= (+ (* (x ?a) 0.5774) (+ (* (y ?a) 0.5774) (* (d ?b) -0.5774))) 14.4338)
	(<= (+ (* (x ?a) 0.5987) (+ (* (d ?b) 0.5322) (* (y ?a) -0.5987))) -0.5987)
	(<= (+ (* (x ?a) 0.6534) (+ (* (d ?b) 0.4629) (* (y ?a) -0.5990))) -0.5718)
	(<= (+ (* (x ?a) 0.6804) (+ (* (y ?a) 0.6804) (* (d ?b) -0.2722))) 44.9073)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.7221) (+ (* (y ?a) 0.6461) (* (d ?b) -0.2470))) 44.2026)
	(<= (+ (* (x ?a) 0.7341) (+ (* (d ?b) 0.5216) (* (y ?a) -0.4347))) 9.0705)
	(<= (+ (* (x ?a) 0.9613) (+ (* (y ?a) 0.1831) (* (d ?b) -0.2060))) 13.5265)
	(<= (+ (* (y ?a) -0.0476) (* (x ?a) -0.9989)) -0.5708)
	(<= (+ (* (y ?a) 0.0245) (+ (* (d ?b) -0.0356) (* (x ?a) -0.9991))) 0.2670)
	(<= (+ (* (y ?a) 0.0364) (+ (* (x ?a) -0.9961) (* (d ?b) -0.0800))) -0.4435)
	(<= (+ (* (y ?a) 0.0416) (+ (* (d ?b) -0.0416) (* (x ?a) -0.9983))) 1.0399)
	(<= (+ (* (y ?a) 0.0440) (+ (* (x ?a) -0.9981) (* (d ?b) -0.0420))) 1.1782)
	(<= (+ (* (y ?a) 0.0484) (+ (* (d ?b) -0.0320) (* (x ?a) -0.9983))) 2.1588)
	(<= (+ (* (y ?a) 0.4326) (+ (* (x ?a) -0.4719) (* (d ?b) -0.7682))) 0.4130)
	(<= (+ (* (y ?a) 0.6859) (+ (* (x ?a) 0.5235) (* (d ?b) -0.5054))) 27.4736)
	(<= (x ?a) 12))
	:effect (and (saved ?b) 
		))

)
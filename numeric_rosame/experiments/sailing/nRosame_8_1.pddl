(define (domain sailing)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	boat person - object
)

(:predicates (saved ?t - person)
)

(:functions (x ?b - boat)
	(y ?b - boat)
	(d ?t - person)
)

(:action go_north_east
	:parameters (?a - boat)
	:precondition (and (<= (* (x ?a) -1) 14)
	(<= (* (y ?a) -1) 0)
	(<= (+ (* (x ?a) 0.3590) (* (y ?a) 0.9333)) 87.9499)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) -0.7071)) 1.4142)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 68.5894)
	(<= (+ (* (x ?a) 0.7338) (* (y ?a) -0.6794)) 1.7121)
	(<= (+ (* (x ?a) 0.7682) (* (y ?a) -0.6402)) 3.0729)
	(<= (+ (* (x ?a) 0.9158) (* (y ?a) 0.4017)) 46.4160)
	(<= (+ (* (y ?a) -0.3162) (* (x ?a) -0.9487)) 7.5895)
	(<= (+ (* (y ?a) -0.5755) (* (x ?a) -0.8178)) 2.4534)
	(<= (+ (* (y ?a) 0.0526) (* (x ?a) -0.9986)) 15.2421)
	(<= (+ (* (y ?a) 0.0830) (* (x ?a) 0.9965)) 31.3912)
	(<= (+ (* (y ?a) 0.1821) (* (x ?a) -0.9833)) 21.8507)
	(<= (+ (* (y ?a) 0.1961) (* (x ?a) -0.9806)) 22.9456)
	(<= (+ (* (y ?a) 0.7071) (* (x ?a) -0.7071)) 68.5894))
	:effect (and 
(increase (x ?a) 1.5000)		
(increase (y ?a) 1.5000)))

(:action go_north_west
	:parameters (?a - boat)
	:precondition (and (<= (* (x ?a) -1) 12.5000)
	(<= (* (y ?a) -1) 0)
	(<= (+ (* (x ?a) -0.7071) (* (y ?a) -0.7071)) -0.7071)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.7442) (* (y ?a) -0.6679)) 2.2327)
	(<= (+ (* (x ?a) 0.7682) (* (y ?a) -0.6402)) 3.2649)
	(<= (+ (* (x ?a) 0.9158) (* (y ?a) 0.4017)) 48.3922)
	(<= (+ (* (y ?a) -0.3162) (* (x ?a) -0.9487)) 6.6408)
	(<= (+ (* (y ?a) 0.0526) (* (x ?a) -0.9986)) 13.6653)
	(<= (+ (* (y ?a) 0.0830) (* (x ?a) 0.9965)) 33.0106)
	(<= (+ (* (y ?a) 0.1821) (* (x ?a) -0.9833)) 20.1027)
	(<= (+ (* (y ?a) 0.3162) (* (x ?a) -0.9487)) 30.3579))
	:effect (and 
(increase (y ?a) 1.5000)		
(decrease (x ?a) 1.5000)))

(:action go_est
	:parameters (?a - boat)
	:precondition (and (= (x ?a) 0)
	(= (y ?a) 0))
	:effect (and 
(assign (x ?a) 3)))

(:action go_west
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) -0.9999) (* (y ?a) -0.0112)) 0.9662)
	(<= (+ (* (x ?a) 0.7849) (* (y ?a) -0.6196)) 0)
	(<= (+ (* (x ?a) 0.8020) (* (y ?a) 0.5973)) 58.1567)
	(<= (+ (* (y ?a) -0.0316) (* (x ?a) -0.9995)) 0)
	(<= (+ (* (y ?a) 0.0250) (* (x ?a) 0.9997)) 23.2052)
	(<= (y ?a) 92))
	:effect (and 
(decrease (x ?a) 3)))

(:action go_south_west
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) -0.7071) (* (y ?a) -0.7071)) -53.7401)
	(<= (+ (* (x ?a) 0.9603) (* (y ?a) -0.2788)) -24.2875)
	(<= (+ (* (y ?a) 0.8575) (* (x ?a) -0.5145)) 79.5753))
	:effect (and 
(increase (x ?a) 2)		
(decrease (y ?a) 2)))

(:action go_south_east
	:parameters (?a - boat)
	:precondition (and (<= (+ (* (x ?a) 0.9996) (* (y ?a) -0.0291)) -3.3093)
	(<= (+ (* (y ?a) -0.1478) (* (x ?a) -0.9890)) -4.6723)
	(<= (+ (* (y ?a) 0.7071) (* (x ?a) -0.7071)) 68.5894))
	:effect (and 
(decrease (x ?a) 2)		
(decrease (y ?a) 2)))

(:action go_south
	:parameters (?a - boat)
	:precondition (and (= (x ?a) 1.5000)
	(= (y ?a) 46.5000))
	:effect (and 
(assign (y ?a) 44.5000)))

(:action save_person
	:parameters (?a - boat ?b - person)
	:precondition (and (<= (+ (* (d ?b) 0.0902) (+ (* (y ?a) 0.0902) (* (x ?a) 0.9918))) 24.5254)
	(<= (+ (* (d ?b) 0.2776) (+ (* (x ?a) 0.9562) (* (y ?a) -0.0925))) 22.0857)
	(<= (+ (* (d ?b) 0.3069) (+ (* (x ?a) 0.9462) (* (y ?a) -0.1023))) 23.1955)
	(<= (+ (* (d ?b) 0.4782) (+ (* (x ?a) -0.6474) (* (y ?a) -0.5935))) -0.8240)
	(<= (+ (* (d ?b) 0.4821) (+ (* (x ?a) 0.8002) (* (y ?a) -0.3567))) 13.4014)
	(<= (+ (* (d ?b) 0.5455) (+ (* (x ?a) -0.5905) (* (y ?a) -0.5947))) -0.6932)
	(<= (+ (* (d ?b) 0.5613) (+ (* (x ?a) -0.5613) (* (y ?a) -0.6081))) -0.7017)
	(<= (+ (* (d ?b) 0.5774) (+ (* (x ?a) -0.5774) (* (y ?a) -0.5774))) 0)
	(<= (+ (* (d ?b) 0.5774) (+ (* (x ?a) 0.5774) (* (y ?a) -0.5774))) 0)
	(<= (+ (* (d ?b) 0.6687) (+ (* (x ?a) 0.1672) (* (y ?a) -0.7245))) -0.8359)
	(<= (+ (* (x ?a) 0.0571) (+ (* (y ?a) 0.8877) (* (d ?b) -0.4568))) 44.1262)
	(<= (+ (* (x ?a) 0.3206) (+ (* (y ?a) 0.8161) (* (d ?b) -0.4809))) 37.2620)
	(<= (+ (* (x ?a) 0.4384) (+ (* (y ?a) 0.7250) (* (d ?b) -0.5311))) 27.6277)
	(<= (+ (* (x ?a) 0.5439) (+ (* (y ?a) 0.5934) (* (d ?b) -0.5934))) 14.2654)
	(<= (+ (* (x ?a) 0.5774) (+ (* (y ?a) 0.5774) (* (d ?b) -0.5774))) 14.4338)
	(<= (+ (* (x ?a) 0.7071) (* (y ?a) 0.7071)) 70.7107)
	(<= (+ (* (x ?a) 0.9249) (+ (* (d ?b) 0.2609) (* (y ?a) -0.2767))) 7.1382)
	(<= (+ (* (y ?a) -0.6750) (+ (* (d ?b) -0.0460) (* (x ?a) -0.7364))) -2.1171)
	(<= (+ (* (y ?a) 0.3097) (+ (* (d ?b) -0.1372) (* (x ?a) -0.9409))) 17.8748)
	(<= (+ (* (y ?a) 0.3671) (+ (* (d ?b) -0.2006) (* (x ?a) -0.9083))) 18.1073)
	(<= (+ (* (y ?a) 0.4397) (+ (* (x ?a) 0.3420) (* (d ?b) -0.8305))) 1.1725)
	(<= (+ (* (y ?a) 0.5118) (+ (* (x ?a) 0.2756) (* (d ?b) -0.8137))) 3.0185)
	(<= (+ (* (y ?a) 0.5345) (+ (* (d ?b) -0.2673) (* (x ?a) -0.8018))) 27.3943)
	(<= (+ (* (y ?a) 0.5930) (+ (* (x ?a) 0.5438) (* (d ?b) -0.5938))) 14.2162)
	(<= (+ (* (y ?a) 0.6017) (+ (* (d ?b) -0.6396) (* (x ?a) -0.4785))) 13.0093)
	(<= (+ (* (y ?a) 0.6066) (+ (* (x ?a) 0.1576) (* (d ?b) -0.7792))) 5.8070)
	(<= (+ (* (y ?a) 0.6667) (+ (* (d ?b) -0.3333) (* (x ?a) -0.6667))) 34)
	(<= (+ (* (y ?a) 0.8904) (+ (* (x ?a) -0.0189) (* (d ?b) -0.4547))) 44.4844))
	:effect (and (saved ?b) 
		))

)
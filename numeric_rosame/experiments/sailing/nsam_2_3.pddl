(define (domain sailing)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	boat person - object
)

(:predicates (saved ?t - person)
)

(:functions (x ?b - boat)
	(y ?b - boat)
	(d ?t - person)
)

(:action go_north_east
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) -0.9977) (* (y ?b) -0.0680)) 0)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) -0.7071)) 0)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 64.3467)
	(<= (+ (* (x ?b) 0.7512) (* (y ?b) -0.6601)) 0.2732)
	(<= (+ (* (x ?b) 0.9762) (* (y ?b) -0.2169)) 12.8531)
	(<= (+ (* (x ?b) 0.9915) (* (y ?b) 0.1302)) 23.0446)
	(<= (+ (* (y ?b) 0.7071) (* (x ?b) -0.7071)) 66.4680))
	:effect (and 
(increase (y ?b) 1.5000)		
(increase (x ?b) 1.5000)))

(:action go_north_west
	:parameters (?b - boat)
	:precondition (and (<= (* (x ?b) -1) -1.5000)
	(<= (+ (* (x ?b) -0.7071) (* (y ?b) -0.7071)) -2.8284)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 66.4680)
	(<= (+ (* (x ?b) 0.8682) (* (y ?b) -0.4961)) 3.4730)
	(<= (+ (* (x ?b) 0.8742) (* (y ?b) -0.4856)) 3.7880)
	(<= (+ (* (x ?b) 0.9915) (* (y ?b) 0.1302)) 24.7271)
	(<= (+ (* (y ?b) -0.1644) (* (x ?b) -0.9864)) -2.7126)
	(<= (+ (* (y ?b) 0.1644) (* (x ?b) -0.9864)) 9.1241))
	:effect (and 
(decrease (x ?b) 1.5000)		
(increase (y ?b) 1.5000)))

(:action go_west
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) -0.3162) (* (y ?b) -0.9487)) -25.9307)
	(<= (+ (* (x ?b) 0.9817) (* (y ?b) 0.1905)) 22.6522)
	(<= (+ (* (y ?b) -0.1348) (* (x ?b) -0.9909)) -8.8862)
	(<= (y ?b) 88))
	:effect (and 
(decrease (x ?b) 3)))

(:action go_south_west
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) -0.7071) (* (y ?b) -0.7071)) -46.6690)
	(<= (+ (* (x ?b) 0.9648) (* (y ?b) -0.2631)) -19.8215)
	(<= (+ (* (y ?b) 0.8742) (* (x ?b) -0.4856)) 76.7316))
	:effect (and 
(increase (x ?b) 2)		
(decrease (y ?b) 2)))

(:action go_south_east
	:parameters (?b - boat)
	:precondition (and (<= (* (y ?b) -1) -82)
	(<= (y ?b) 94)
	(= (+ (x ?b) (* (y ?b) -1)) -94))
	:effect (and 
(decrease (x ?b) (+ (* (x ?b) 0.5000) (+ (* (y ?b) -0.5000) 49)))		
(decrease (y ?b) (+ (* (x ?b) -0.5000) (+ (* (y ?b) 0.5000) -45)))))

(:action save_person
	:parameters (?b - boat ?t - person)
	:precondition (and (not (saved ?t))
	(<= (* (x ?b) -1) 0)
	(<= (+ (* (d ?t) 0.3395) (+ (* (x ?b) 0.8174) (* (y ?b) -0.4653))) 0.1006)
	(<= (+ (* (d ?t) 0.3965) (+ (* (x ?b) 0.7930) (* (y ?b) -0.4626))) 1.2886)
	(<= (+ (* (d ?t) 0.5324) (+ (* (x ?b) 0.6830) (* (y ?b) -0.5001))) 3.3288)
	(<= (+ (* (d ?t) 0.5464) (+ (* (y ?b) -0.5592) (* (x ?b) -0.6235))) -1.2084)
	(<= (+ (* (d ?t) 0.5484) (+ (* (x ?b) 0.6540) (* (y ?b) -0.5211))) 2.5662)
	(<= (+ (* (d ?t) 0.5774) (+ (* (x ?b) 0.5774) (* (y ?b) -0.5774))) 0)
	(<= (+ (* (x ?b) 0.5541) (+ (* (y ?b) 0.5799) (* (d ?t) -0.5973))) 13.7825)
	(<= (+ (* (x ?b) 0.5774) (+ (* (y ?b) 0.5774) (* (d ?t) -0.5774))) 14.4338)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 66.4680)
	(<= (+ (* (x ?b) 0.9088) (+ (* (y ?b) 0.0136) (* (d ?t) -0.4171))) 0.9495)
	(<= (+ (* (x ?b) 0.9567) (* (y ?b) -0.2912)) 0.0832)
	(<= (+ (* (y ?b) -0.1644) (* (x ?b) -0.9864)) -1.4796)
	(<= (+ (* (y ?b) 0.1051) (+ (* (d ?t) -0.2284) (* (x ?b) -0.9679))) -0.6525)
	(<= (+ (* (y ?b) 0.1132) (+ (* (d ?t) -0.1899) (* (x ?b) -0.9753))) -0.3098)
	(<= (+ (* (y ?b) 0.8506) (+ (* (d ?t) -0.4494) (* (x ?b) -0.2728))) 37.7173)
	(<= (+ (* (y ?b) 0.8734) (+ (* (x ?b) -0.0856) (* (d ?t) -0.4795))) 37.9826)
	(<= (x ?b) 11.5000))
	:effect (and (saved ?t) 
		))

)
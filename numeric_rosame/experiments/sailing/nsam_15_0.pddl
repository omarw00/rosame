(define (domain sailing)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	boat person - object
)

(:predicates (saved ?t - person)
)

(:functions (x ?b - boat)
	(y ?b - boat)
	(d ?t - person)
)

(:action go_north_east
	:parameters (?b - boat)
	:precondition (and (<= (* (y ?b) -1) 0)
	(<= (+ (* (x ?b) -0.9355) (* (y ?b) -0.3534)) 6.9225)
	(<= (+ (* (x ?b) 0.3590) (* (y ?b) 0.9333)) 87.9499)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 68.5894)
	(<= (+ (* (x ?b) 0.7682) (* (y ?b) -0.6402)) 3.0729)
	(<= (+ (* (x ?b) 0.9158) (* (y ?b) 0.4017)) 46.4160)
	(<= (+ (* (y ?b) -0.5755) (* (x ?b) -0.8178)) 2.4534)
	(<= (+ (* (y ?b) 0.0830) (* (x ?b) 0.9965)) 31.3912)
	(<= (+ (* (y ?b) 0.2425) (* (x ?b) -0.9701)) 29.1043)
	(<= (+ (* (y ?b) 0.2983) (* (x ?b) -0.9545)) 32.2137)
	(<= (+ (* (y ?b) 0.7071) (* (x ?b) -0.7071)) 68.5894))
	:effect (and 
(increase (y ?b) 1.5000)		
(increase (x ?b) 1.5000)))

(:action go_north_west
	:parameters (?b - boat)
	:precondition (and (<= (* (y ?b) -1) 0)
	(<= (+ (* (x ?b) -0.7071) (* (y ?b) -0.7071)) -0.7071)
	(<= (+ (* (x ?b) -0.9355) (* (y ?b) -0.3534)) 6.0494)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) -0.7071)) 2.8284)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 70.7107)
	(<= (+ (* (x ?b) 0.7682) (* (y ?b) -0.6402)) 3.2649)
	(<= (+ (* (x ?b) 0.9158) (* (y ?b) 0.4017)) 48.3922)
	(<= (+ (* (y ?b) 0.0830) (* (x ?b) 0.9965)) 33.0106)
	(<= (+ (* (y ?b) 0.2425) (* (x ?b) -0.9701)) 27.2853)
	(<= (+ (* (y ?b) 0.3371) (* (x ?b) -0.9415)) 32.4287))
	:effect (and 
(decrease (x ?b) 1.5000)		
(increase (y ?b) 1.5000)))

(:action go_est
	:parameters (?b - boat)
	:precondition (and (= (x ?b) 0)
	(= (y ?b) 0))
	:effect (and 
(assign (x ?b) 3)))

(:action go_west
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) 0.7415) (* (y ?b) -0.6709)) 0)
	(<= (+ (* (x ?b) 0.8020) (* (y ?b) 0.5973)) 58.1567)
	(<= (+ (* (x ?b) 0.9062) (* (y ?b) -0.4229)) 8.3369)
	(<= (+ (* (y ?b) -0.0341) (* (x ?b) -0.9994)) 0)
	(<= (+ (* (y ?b) 0.0250) (* (x ?b) 0.9997)) 23.2052)
	(<= (+ (* (y ?b) 0.2425) (* (x ?b) -0.9701)) 24.2536)
	(<= (y ?b) 92))
	:effect (and 
(decrease (x ?b) 3)))

(:action go_south_west
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) -0.7071) (* (y ?b) -0.7071)) -46.6690)
	(<= (+ (* (x ?b) 0.8526) (* (y ?b) -0.5226)) -37.2394)
	(<= (+ (* (x ?b) 0.8858) (* (y ?b) 0.4640)) 45.3883)
	(<= (+ (* (y ?b) 0.3714) (* (x ?b) -0.9285)) 42.7099)
	(<= (+ (* (y ?b) 0.7071) (* (x ?b) -0.7071)) 68.5894)
	(<= (+ (* (y ?b) 0.8575) (* (x ?b) -0.5145)) 79.5753))
	:effect (and 
(decrease (y ?b) 2)		
(increase (x ?b) 2)))

(:action go_south_east
	:parameters (?b - boat)
	:precondition (and (<= (+ (* (x ?b) 0.9538) (* (y ?b) -0.3005)) -15.4303)
	(<= (+ (* (y ?b) -0.2609) (* (x ?b) -0.9654)) -9.8102)
	(<= (+ (* (y ?b) 0.3714) (* (x ?b) -0.9285)) 41.5958)
	(<= (+ (* (y ?b) 0.5226) (* (x ?b) 0.8526)) 50.6885)
	(<= (+ (* (y ?b) 0.7071) (* (x ?b) -0.7071)) 68.5894))
	:effect (and 
(decrease (x ?b) 2)		
(decrease (y ?b) 2)))

(:action go_south
	:parameters (?b - boat)
	:precondition (and (<= (* (y ?b) -1) -46.5000)
	(<= (y ?b) 78)
	(= (+ (* (x ?b) 1) (* (y ?b) 0.0476)) 3.7143))
	:effect (and 
(decrease (y ?b) (+ (* (x ?b) 0.0475) (+ (* (y ?b) 0.0023) 1.8235)))))

(:action save_person
	:parameters (?b - boat ?t - person)
	:precondition (and (not (saved ?t))
	(<= (+ (* (d ?t) 0.0263) (+ (* (x ?b) 0.9990) (* (y ?b) -0.0351))) 11.5152)
	(<= (+ (* (d ?t) 0.3771) (+ (* (x ?b) 0.8957) (* (y ?b) -0.2357))) 16.8763)
	(<= (+ (* (d ?t) 0.4782) (+ (* (x ?b) -0.6474) (* (y ?b) -0.5935))) -0.8240)
	(<= (+ (* (d ?t) 0.4821) (+ (* (x ?b) 0.8002) (* (y ?b) -0.3567))) 13.4014)
	(<= (+ (* (d ?t) 0.5455) (+ (* (x ?b) -0.5905) (* (y ?b) -0.5947))) -0.6932)
	(<= (+ (* (d ?t) 0.5613) (+ (* (x ?b) -0.5613) (* (y ?b) -0.6081))) -0.7017)
	(<= (+ (* (d ?t) 0.5774) (+ (* (x ?b) -0.5774) (* (y ?b) -0.5774))) 0)
	(<= (+ (* (d ?t) 0.5774) (+ (* (x ?b) 0.5774) (* (y ?b) -0.5774))) 0)
	(<= (+ (* (d ?t) 0.6000) (* (y ?b) -0.8000)) -1.2000)
	(<= (+ (* (d ?t) 0.6783) (* (y ?b) -0.7348)) -0.8479)
	(<= (+ (* (x ?b) 0.0571) (+ (* (y ?b) 0.8877) (* (d ?t) -0.4568))) 44.1262)
	(<= (+ (* (x ?b) 0.1320) (+ (* (y ?b) 0.0440) (* (d ?t) -0.9903))) 0.2641)
	(<= (+ (* (x ?b) 0.2579) (+ (* (y ?b) 0.8394) (* (d ?t) -0.4783))) 39.2146)
	(<= (+ (* (x ?b) 0.5249) (+ (* (y ?b) 0.5915) (* (d ?t) -0.6120))) 13.9480)
	(<= (+ (* (x ?b) 0.5774) (+ (* (y ?b) 0.5774) (* (d ?t) -0.5774))) 14.4338)
	(<= (+ (* (x ?b) 0.6748) (+ (* (d ?t) 0.4428) (* (y ?b) -0.5904))) 0.1265)
	(<= (+ (* (x ?b) 0.7071) (* (y ?b) 0.7071)) 70.7107)
	(<= (+ (* (x ?b) 0.8810) (+ (* (d ?t) 0.4066) (* (y ?b) -0.2420))) 18.2195)
	(<= (+ (* (y ?b) -0.0806) (+ (* (x ?b) -0.2417) (* (d ?t) -0.9670))) -0.4835)
	(<= (+ (* (y ?b) -0.6750) (+ (* (d ?t) -0.0460) (* (x ?b) -0.7364))) -2.1171)
	(<= (+ (* (y ?b) 0.1644) (* (d ?t) -0.9864)) 0.4932)
	(<= (+ (* (y ?b) 0.1871) (* (d ?t) -0.9823)) 0.8420)
	(<= (+ (* (y ?b) 0.5603) (+ (* (d ?t) -0.2801) (* (x ?b) -0.7795))) 28.6833)
	(<= (+ (* (y ?b) 0.5625) (+ (* (x ?b) -0.6227) (* (d ?t) -0.5440))) 15.0551)
	(<= (+ (* (y ?b) 0.5774) (+ (* (d ?t) -0.5774) (* (x ?b) -0.5774))) 14.4338)
	(<= (+ (* (y ?b) 0.5917) (+ (* (d ?t) -0.6329) (* (x ?b) -0.4994))) 13.1026)
	(<= (+ (* (y ?b) 0.6130) (+ (* (d ?t) -0.6962) (* (x ?b) -0.3736))) 11.9118)
	(<= (+ (* (y ?b) 0.6667) (+ (* (d ?t) -0.3333) (* (x ?b) -0.6667))) 34)
	(<= (+ (* (y ?b) 0.6759) (+ (* (x ?b) 0.3862) (* (d ?t) -0.6276))) 18.8777)
	(<= (+ (* (y ?b) 0.6841) (+ (* (x ?b) 0.4600) (* (d ?t) -0.5661))) 22.6624)
	(<= (+ (* (y ?b) 0.8904) (+ (* (x ?b) -0.0189) (* (d ?t) -0.4547))) 44.4844))
	:effect (and (saved ?t) 
		))

)
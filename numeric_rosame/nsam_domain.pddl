(define (domain driverlog)
(:requirements :typing :fluents :negative-preconditions :equality)
(:types 	location locatable - object
	driver truck obj - locatable
)

(:predicates (at ?obj - locatable ?loc - location)
	(in ?obj1 - obj ?obj - truck)
	(driving ?d - driver ?v - truck)
	(link ?x - location ?y - location)
	(path ?x - location ?y - location)
	(empty ?v - truck)
)

(:functions (time-to-walk ?l1 - location ?l2 - location)
	(time-to-drive ?l1 - location ?l2 - location)
	(driven )
	(walked )
)

(:action load-truck
	:parameters (?obj - obj ?truck - truck ?loc - location)
	:precondition (and (at ?obj ?loc)
	(at ?truck ?loc)
	(not (in ?obj ?truck))
	(<= (+ (* (driven ) 0.7682) (* (walked ) -0.6402)) 0)
	(<= (+ (* (walked ) 0.1644) (* (driven ) -0.9864)) 0)
	(<= (walked ) 6))
	:effect (and (in ?obj ?truck)
		(not (at ?obj ?loc)) 
		))

(:action unload-truck
	:parameters (?obj - obj ?truck - truck ?loc - location)
	:precondition (and (at ?truck ?loc)
	(in ?obj ?truck)
	(not (at ?obj ?loc))
	(not (empty ?truck))
	(<= (* (driven ) -1) -5)
	(<= (driven ) 8)
	(= (walked ) 6))
	:effect (and (at ?obj ?loc)
		(not (in ?obj ?truck)) 
		))

(:action board-truck
	:parameters (?driver - driver ?truck - truck ?loc - location)
	:precondition (and (at ?driver ?loc)
	(at ?truck ?loc)
	(empty ?truck)
	(not (driving ?driver ?truck))
	(= (driven ) 0)
	(= (walked ) 0))
	:effect (and (driving ?driver ?truck)
		(not (at ?driver ?loc))
		(not (empty ?truck)) 
		))

(:action drive-truck
	:parameters (?truck - truck ?loc-from - location ?loc-to - location ?driver - driver)
	:precondition (and (at ?truck ?loc-from)
	(driving ?driver ?truck)
	(link ?loc-from ?loc-to)
	(link ?loc-to ?loc-from)
	(not (at ?driver ?loc-from))
	(not (at ?driver ?loc-to))
	(not (at ?truck ?loc-to))
	(not (empty ?truck))
	(not (path ?loc-from ?loc-to))
	(not (path ?loc-to ?loc-from))
	(<= (* (time-to-drive ?loc-to ?loc-from) -1) -1)
	(<= (+ (* (driven ) 0.3487) (+ (* (time-to-drive ?loc-to ?loc-from) 0.8137) (* (walked ) -0.4650))) 0.8137)
	(<= (+ (* (walked ) 0.4626) (+ (* (driven ) -0.3965) (* (time-to-drive ?loc-to ?loc-from) -0.7930))) -0.7930)
	(<= (walked ) 6)
	(= (time-to-drive ?loc-from ?loc-to) (time-to-drive ?loc-to ?loc-from))(not (= ?loc-from ?loc-to)))
	:effect (and (at ?truck ?loc-to)
		(not (at ?truck ?loc-from))
(increase (driven ) (time-to-drive ?loc-from ?loc-to))))

(:action walk
	:parameters (?driver - driver ?loc-from - location ?loc-to - location)
	:precondition (and (at ?driver ?loc-from)
	(not (at ?driver ?loc-to))
	(not (link ?loc-from ?loc-to))
	(not (link ?loc-to ?loc-from))
	(path ?loc-from ?loc-to)
	(path ?loc-to ?loc-from)
	(<= (* (walked ) -1) 0)
	(<= (walked ) 4)
	(= (+ (* (time-to-walk ?loc-from ?loc-to) 1) (+ (* (walked ) 0.4000) (* (time-to-walk ?loc-to ?loc-from) -0.2000))) 3.2000)
	(= (+ (* (walked ) 0.5000) (* (time-to-walk ?loc-to ?loc-from) 1)) 4)
	(= (driven ) 1)(not (= ?loc-from ?loc-to)))
	:effect (and (at ?driver ?loc-to)
		(not (at ?driver ?loc-from))
(decrease (time-to-walk ?loc-from ?loc-to) (+ (* (time-to-walk ?loc-from ?loc-to) 0.8000) (+ (* (walked ) 0.4000) -3.2000)))		
(increase (walked ) (+ (* (time-to-walk ?loc-from ?loc-to) -0.2000) (+ (* (walked ) -0.6000) 4.8000)))		
(assign (driven ) 1)		
(assign (time-to-walk ?loc-to ?loc-from) (+ (* (time-to-walk ?loc-from ?loc-to) 0.2000) (+ (* (walked ) -0.4000) 3.2000)))))

)